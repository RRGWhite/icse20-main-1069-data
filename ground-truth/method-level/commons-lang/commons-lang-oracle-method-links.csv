project,test-fqn,function-fqn
commons-lang,"org.apache.commons.lang3.math.NumberUtilsTest.testIsDigits()","org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)"
commons-lang,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectRecursiveCycleSelfreference()","org.apache.commons.lang3.builder.EqualsBuilder.isEquals()"
commons-lang,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray()","org.apache.commons.lang3.builder.ToStringBuilder.append(float[])"
commons-lang,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray()","org.apache.commons.lang3.builder.ToStringBuilder.toString()"
commons-lang,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix()","org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.Object, java.util.Map<java.lang.String, V>, java.lang.String, java.lang.String)"
commons-lang,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveAllNullObjectArray()","org.apache.commons.lang3.ArrayUtils.remove(T[], int)"
commons-lang,"org.apache.commons.lang3.time.FastDateParserTest.testDayNumberOfWeek()","org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)"
commons-lang,"org.apache.commons.lang3.time.DateUtilsTest.testLANG799_DE_FAIL()","org.apache.commons.lang3.time.DateUtils.parseDate(java.lang.String, java.lang.String[])"
commons-lang,"org.apache.commons.lang3.concurrent.EventCountCircuitBreakerTest.testChangeEvents()","org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.addChangeListener(java.beans.PropertyChangeListener)"
commons-lang,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetSizeStartText()","org.apache.commons.lang3.builder.ToStringStyle.setSizeStartText(java.lang.String)"
commons-lang,"org.apache.commons.lang3.text.StrLookupTest.testMapLookup_nullMap()","org.apache.commons.lang3.text.StrLookup.MapStrLookup.lookup(java.lang.String)"
commons-lang,"org.apache.commons.lang3.text.StrLookupTest.testMapLookup_nullMap()","org.apache.commons.lang3.text.StrLookup.mapLookup(java.util.Map<java.lang.String, V>)"
commons-lang,"org.apache.commons.lang3.mutable.MutableIntTest.testIncrement()","org.apache.commons.lang3.mutable.MutableInt.increment()"
commons-lang,"org.apache.commons.lang3.mutable.MutableIntTest.testIncrement()","org.apache.commons.lang3.mutable.MutableInt.intValue()"
commons-lang,"org.apache.commons.lang3.mutable.MutableIntTest.testIncrement()","org.apache.commons.lang3.mutable.MutableInt.longValue()"
commons-lang,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse()","org.apache.commons.lang3.concurrent.BackgroundInitializer.get()"
commons-lang,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse()","org.apache.commons.lang3.concurrent.BackgroundInitializer.start()"
commons-lang,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse()","org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.addInitializer(java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>)"
commons-lang,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils()","org.apache.commons.lang3.RandomStringUtils.random(int)"
commons-lang,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils()","org.apache.commons.lang3.RandomStringUtils.random(int, char[])"
commons-lang,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils()","org.apache.commons.lang3.RandomStringUtils.random(int, int, int, boolean, boolean, char[], java.util.Random)"
commons-lang,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils()","org.apache.commons.lang3.RandomStringUtils.random(int, java.lang.String)"
commons-lang,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils()","org.apache.commons.lang3.RandomStringUtils.randomAlphabetic(int)"
commons-lang,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils()","org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric(int)"
commons-lang,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils()","org.apache.commons.lang3.RandomStringUtils.randomAscii(int)"
commons-lang,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils()","org.apache.commons.lang3.RandomStringUtils.randomGraph(int)"
commons-lang,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils()","org.apache.commons.lang3.RandomStringUtils.randomNumeric(int)"
commons-lang,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils()","org.apache.commons.lang3.RandomStringUtils.randomPrint(int)"
commons-lang,"org.apache.commons.lang3.time.FastTimeZoneTest.testUTC()","org.apache.commons.lang3.time.FastTimeZone.getGmtTimeZone()"
commons-lang,"org.apache.commons.lang3.time.FastTimeZoneTest.testUTC()","org.apache.commons.lang3.time.FastTimeZone.getTimeZone(java.lang.String)"
commons-lang,"org.apache.commons.lang3.text.StrBuilderTest.testLang295()","org.apache.commons.lang3.text.StrBuilder.<init>(java.lang.String)"
commons-lang,"org.apache.commons.lang3.text.StrBuilderTest.testLang295()","org.apache.commons.lang3.text.StrBuilder.contains(char)"
commons-lang,"org.apache.commons.lang3.text.StrBuilderTest.testLang295()","org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)"
commons-lang,"org.apache.commons.lang3.text.StrBuilderTest.testLang295()","org.apache.commons.lang3.text.StrBuilder.indexOf(char)"
commons-lang,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives()","org.apache.commons.lang3.ArrayUtils.isNotEmpty(boolean[])"
commons-lang,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives()","org.apache.commons.lang3.ArrayUtils.isNotEmpty(byte[])"
commons-lang,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives()","org.apache.commons.lang3.ArrayUtils.isNotEmpty(char[])"
commons-lang,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives()","org.apache.commons.lang3.ArrayUtils.isNotEmpty(double[])"
commons-lang,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives()","org.apache.commons.lang3.ArrayUtils.isNotEmpty(float[])"
commons-lang,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives()","org.apache.commons.lang3.ArrayUtils.isNotEmpty(int[])"
commons-lang,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives()","org.apache.commons.lang3.ArrayUtils.isNotEmpty(long[])"
commons-lang,"org.apache.commons.lang3.ArrayUtilsTest.testIsNotEmptyPrimitives()","org.apache.commons.lang3.ArrayUtils.isNotEmpty(short[])"
commons-lang,"org.apache.commons.lang3.RangeTest.testIsBeforeRange()","org.apache.commons.lang3.Range.isBeforeRange(org.apache.commons.lang3.Range<T>)"
commons-lang,"org.apache.commons.lang3.ObjectUtilsTest.testPossibleCloneOfNotCloneable()","org.apache.commons.lang3.ObjectUtils.cloneIfPossible(T)"
commons-lang,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomPrintRange()","org.apache.commons.lang3.RandomStringUtils.randomPrint(int, int)"
commons-lang,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder_int_int()","org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder, int, int)"
commons-lang,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuilder_int_int()","org.apache.commons.lang3.text.StrBuilder.toString()"
commons-lang,"org.apache.commons.lang3.tuple.TripleTest.testComparable2()","org.apache.commons.lang3.tuple.Triple.compareTo(org.apache.commons.lang3.tuple.Triple<L, M, R>)"
commons-lang,"org.apache.commons.lang3.tuple.ImmutablePairTest.testPairOf()","org.apache.commons.lang3.tuple.ImmutablePair.of(L, R)"
commons-lang,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray()","org.apache.commons.lang3.CharSetUtils.keep(java.lang.String, java.lang.String[])"
commons-lang,"org.apache.commons.lang3.time.GmtTimeZoneTest.getRawOffset()","org.apache.commons.lang3.time.GmtTimeZone.getRawOffset()"
commons-lang,"org.apache.commons.lang3.reflect.TypeUtilsTest.testLang1114()","org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type, java.lang.reflect.Type)"
commons-lang,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength()","org.apache.commons.lang3.text.StrBuilder.capacity()"
commons-lang,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength()","org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)"
commons-lang,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength()","org.apache.commons.lang3.text.StrBuilder.isEmpty()"
commons-lang,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength()","org.apache.commons.lang3.text.StrBuilder.length()"
commons-lang,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength()","org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()"
commons-lang,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength()","org.apache.commons.lang3.text.StrBuilder.size()"
commons-lang,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits()","org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[])"
commons-lang,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldForceAccess()","org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class<?>, java.lang.String, boolean)"
commons-lang,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_FormattedString()","org.apache.commons.lang3.text.StrBuilder.append(java.lang.String, java.lang.Object[])"
commons-lang,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedPathPackageNullString()","org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedPath(java.lang.Package, java.lang.String)"
commons-lang,"org.apache.commons.lang3.CharSetTest.testHashCode()","org.apache.commons.lang3.CharSet.hashCode()"
commons-lang,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testSuper()","org.apache.commons.lang3.builder.HashCodeBuilder.<init>(int, int)"
commons-lang,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testSuper()","org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)"
commons-lang,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testSuper()","org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)"
commons-lang,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testSuper()","org.apache.commons.lang3.builder.HashCodeBuilder.toHashCode()"
commons-lang,"org.apache.commons.lang3.ClassUtilsTest.test_getName_Object()","org.apache.commons.lang3.ClassUtils.getName(java.lang.Object, java.lang.String)"
commons-lang,"org.apache.commons.lang3.StringUtilsContainsTest.testContainsIgnoreCase_StringString()","org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence, java.lang.CharSequence)"
commons-lang,"org.apache.commons.lang3.LocaleUtilsTest.testLanguagesByCountry()","org.apache.commons.lang3.LocaleUtils.languagesByCountry(java.lang.String)"
commons-lang,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectComparator()","org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object, java.lang.Object, java.util.Comparator<?>)"
commons-lang,"org.apache.commons.lang3.builder.CompareToBuilderTest.testObjectComparator()","org.apache.commons.lang3.builder.CompareToBuilder.toComparison()"
commons-lang,"org.apache.commons.lang3.StringUtilsTest.testDefaultIfBlank_CharBuffers()","org.apache.commons.lang3.StringUtils.defaultIfBlank(T, T)"
commons-lang,"org.apache.commons.lang3.reflect.FieldUtilsTest.testGetFieldIllegalArgumentException1()","org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class<?>, java.lang.String)"
commons-lang,"org.apache.commons.lang3.mutable.MutableShortTest.testToString()","org.apache.commons.lang3.mutable.MutableShort.toString()"
commons-lang,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt_nullArray()","org.apache.commons.lang3.math.NumberUtils.max(int[])"
commons-lang,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsArrayGenericTypes()","org.apache.commons.lang3.reflect.TypeUtils.isArrayType(java.lang.reflect.Type)"
commons-lang,"org.apache.commons.lang3.text.translate.EntityArraysTest.testHTML40_EXTENDED_ESCAPE()","org.apache.commons.lang3.text.translate.EntityArrays.HTML40_EXTENDED_ESCAPE()"
