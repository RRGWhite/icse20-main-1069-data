test,tested-method
"org.jfree.chart.TimeSeriesChartTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.BarChart3DTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.StackedBarChart3DTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2Test.testDrawWithEmptyDataset()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.StackedAreaChartTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.BarChartTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.XYLineChartTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.GanttChartTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.plot.XYPlotTest.testDrawRangeGridlines()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.ScatterPlotTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.LineChartTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.plot.XYPlotTest.testDrawSeriesWithZeroItems()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.XYStepChartTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.XYBarChartTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.axis.LogAxisTest.testRefreshTicksWithZeroTickUnit()","org.jfree.chart.axis.LogAxis.refreshTicks(java.awt.Graphics2D, org.jfree.chart.axis.AxisState, java.awt.geom.Rectangle2D, org.jfree.ui.RectangleEdge)"
"org.jfree.chart.LineChart3DTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.StackedBarChartTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.XYAreaChartTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.AreaChartTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.XYStepAreaChartTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.WaterfallChartTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.annotations.CategoryTextAnnotationTest.testHashcode()","org.jfree.chart.annotations.CategoryTextAnnotation.hashCode()"
"org.jfree.chart.annotations.CategoryPointerAnnotationTest.testHashCode()","org.jfree.chart.annotations.CategoryPointerAnnotation.hashCode()"
"org.jfree.chart.annotations.CategoryPointerAnnotationTest.testEquals()","org.jfree.chart.annotations.CategoryPointerAnnotation.equals(java.lang.Object)"
"org.jfree.chart.annotations.CategoryTextAnnotationTest.testEquals()","org.jfree.chart.annotations.CategoryTextAnnotation.equals(java.lang.Object)"
"org.jfree.chart.annotations.TextAnnotationTest.testHashCode()","org.jfree.chart.annotations.CategoryTextAnnotation.hashCode()"
"org.jfree.chart.annotations.TextAnnotationTest.testEquals()","org.jfree.chart.annotations.CategoryTextAnnotation.equals(java.lang.Object)"
"org.jfree.chart.plot.CategoryPlotTest.testEquals()","org.jfree.chart.plot.CategoryPlot.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.XYBarRendererTest.testGetLegendItemSeriesIndex()","org.jfree.chart.renderer.xy.XYBarRenderer.getLegendItem(int, int)"
"org.jfree.chart.axis.DateAxisTest.testSetMinimumDate()","org.jfree.chart.axis.DateAxis.setMinimumDate(java.util.Date)"
"org.jfree.chart.axis.DateAxisTest.testSetMaximumDate()","org.jfree.chart.axis.DateAxis.setMaximumDate(java.util.Date)"
"org.jfree.chart.plot.dial.DialTextAnnotationTest.testEquals()","org.jfree.chart.plot.dial.DialTextAnnotation.equals(java.lang.Object)"
"org.jfree.chart.plot.CrosshairTest.testEquals()","org.jfree.chart.plot.Crosshair.equals(java.lang.Object)"
"org.jfree.chart.renderer.AbstractRendererTest.testEquals()","org.jfree.chart.renderer.category.BarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.AbstractRendererTest.testSetSeriesVisible()","org.jfree.chart.renderer.AbstractRenderer.setSeriesVisible(java.lang.Boolean)"
"org.jfree.chart.plot.MultiplePiePlotTest.testEquals()","org.jfree.chart.plot.MultiplePiePlot.equals(java.lang.Object)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindYValue()","org.jfree.data.general.DatasetUtilities.findYValue(org.jfree.data.xy.XYDataset, int, double)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindYValueNonSorted()","org.jfree.data.general.DatasetUtilities.findYValue(org.jfree.data.xy.XYDataset, int, double)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindYValueWithDuplicates()","org.jfree.data.general.DatasetUtilities.findYValue(org.jfree.data.xy.XYDataset, int, double)"
"org.jfree.data.xy.MatrixSeriesTest.testGetItemColumn()","org.jfree.data.xy.MatrixSeries.getItemColumn(int)"
"org.jfree.data.xy.MatrixSeriesTest.testGetItem()","org.jfree.data.xy.MatrixSeries.getItem(int)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetPercentComplete()","org.jfree.data.gantt.TaskSeriesCollection.getPercentComplete(int, int)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetPercentComplete()","org.jfree.data.gantt.TaskSeriesCollection.getPercentComplete(int, int, int)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetPercentComplete()","org.jfree.data.gantt.TaskSeriesCollection.getPercentComplete(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.chart.renderer.xy.XYBarRendererTest.testEquals()","org.jfree.chart.renderer.xy.XYBarRenderer.equals(java.lang.Object)"
"org.jfree.data.xy.XIntervalSeriesCollectionTest.testRemoveSeries()","org.jfree.data.xy.XIntervalSeriesCollection.removeSeries(int)"
"org.jfree.data.xy.XIntervalSeriesCollectionTest.testEquals()","org.jfree.data.xy.XIntervalSeriesCollection.equals(java.lang.Object)"
"org.jfree.chart.axis.DateTickTest.testEquals()","org.jfree.chart.axis.DateTick.equals(java.lang.Object)"
"org.jfree.chart.axis.DateTickTest.testHashCode()","org.jfree.chart.axis.DateTick.hashCode()"
"org.jfree.data.general.DatasetUtilitiesTest.testCreateCategoryDataset2()","org.jfree.data.general.DatasetUtilities.createCategoryDataset(java.lang.Comparable[], java.lang.Comparable[], double[][])"
"org.jfree.data.general.DatasetUtilitiesTest.testCreateCategoryDataset1()","org.jfree.data.general.DatasetUtilities.createCategoryDataset(java.lang.Comparable[], java.lang.Comparable[], double[][])"
"org.jfree.chart.plot.SpiderWebPlotTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.plot.CombinedDomainCategoryPlotTest.testEquals()","org.jfree.chart.plot.CombinedDomainCategoryPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.CombinedDomainCategoryPlotTest.testRemoveSubplot()","org.jfree.chart.plot.CombinedDomainCategoryPlot.remove(org.jfree.chart.plot.CategoryPlot)"
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2Test.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2Test.testEquals()","org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.equals(java.lang.Object)"
"org.jfree.chart.MeterChartTest.testDrawWithNullInfo()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.data.xy.CategoryTableXYDatasetTest.testEquals()","org.jfree.data.xy.CategoryTableXYDataset.equals(java.lang.Object)"
"org.jfree.data.xy.CategoryTableXYDatasetTest.testAddSeries()","org.jfree.data.xy.CategoryTableXYDataset.add(double, double, java.lang.String)"
"org.jfree.chart.plot.dial.DialPlotTest.testEquals()","org.jfree.chart.plot.dial.DialPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.dial.StandardDialScaleTest.testValueToAngle()","org.jfree.chart.plot.dial.StandardDialScale.valueToAngle(double)"
"org.jfree.chart.plot.dial.StandardDialScaleTest.testHashCode()","org.jfree.chart.plot.dial.StandardDialScale.hashCode()"
"org.jfree.chart.plot.dial.StandardDialScaleTest.testEquals()","org.jfree.chart.plot.dial.StandardDialScale.equals(java.lang.Object)"
"org.jfree.chart.plot.dial.StandardDialScaleTest.testAngleToValue()","org.jfree.chart.plot.dial.StandardDialScale.angleToValue(double)"
"org.jfree.data.gantt.SlidingGanttCategoryDatasetTest.testEquals()","org.jfree.data.gantt.SlidingGanttCategoryDataset.equals(java.lang.Object)"
"org.jfree.data.gantt.XYTaskDatasetTest.testEquals()","org.jfree.data.gantt.XYTaskDataset.equals(java.lang.Object)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetEndValue3()","org.jfree.data.gantt.TaskSeriesCollection.getEndValue(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetRowCount()","org.jfree.data.gantt.TaskSeriesCollection.getRowCount()"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetValue()","org.jfree.data.gantt.TaskSeriesCollection.getValue(int, int)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetValue()","org.jfree.data.gantt.TaskSeriesCollection.getValue(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetColumnCount()","org.jfree.data.gantt.TaskSeriesCollection.getColumnCount()"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetSeriesCount()","org.jfree.data.gantt.TaskSeriesCollection.getSeriesCount()"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetEndValue2()","org.jfree.data.gantt.TaskSeriesCollection.getEndValue(int, int, int)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetEndValue2()","org.jfree.data.gantt.TaskSeriesCollection.getEndValue(java.lang.Comparable, java.lang.Comparable, int)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetStartValue3()","org.jfree.data.gantt.TaskSeriesCollection.getStartValue(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetRowIndex()","org.jfree.data.gantt.TaskSeriesCollection.getRowIndex(java.lang.Comparable)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetColumnIndex()","org.jfree.data.gantt.TaskSeriesCollection.getColumnIndex(java.lang.Comparable)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testEquals()","org.jfree.data.gantt.TaskSeriesCollection.equals(java.lang.Object)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetRowKey()","org.jfree.data.gantt.TaskSeriesCollection.getRowKey(int)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetStartValue()","org.jfree.data.gantt.TaskSeriesCollection.getStartValue(int, int)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetStartValue()","org.jfree.data.gantt.TaskSeriesCollection.getStartValue(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetStartValue2()","org.jfree.data.gantt.TaskSeriesCollection.getStartValue(int, int, int)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetStartValue2()","org.jfree.data.gantt.TaskSeriesCollection.getStartValue(java.lang.Comparable, java.lang.Comparable, int)"
"org.jfree.data.gantt.TaskSeriesTest.testGetTask()","org.jfree.data.gantt.TaskSeries.get(java.lang.String)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetEndValue()","org.jfree.data.gantt.TaskSeriesCollection.getEndValue(int, int)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetEndValue()","org.jfree.data.gantt.TaskSeriesCollection.getEndValue(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetSubIntervalCount()","org.jfree.data.gantt.TaskSeriesCollection.getSubIntervalCount(int, int)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetSeriesKey()","org.jfree.data.gantt.TaskSeriesCollection.getSeriesKey(int)"
"org.jfree.chart.plot.dial.DialValueIndicatorTest.testEquals()","org.jfree.chart.plot.dial.DialValueIndicator.equals(java.lang.Object)"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateRangeBounds4()","org.jfree.data.general.DatasetUtilities.iterateRangeBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindRangeBounds2()","org.jfree.data.general.DatasetUtilities.findRangeBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindRangeBounds2()","org.jfree.data.general.DatasetUtilities.findRangeBounds(org.jfree.data.xy.XYDataset, boolean)"
"org.jfree.chart.renderer.xy.YIntervalRendererTest.testGetLegendItemSeriesIndex()","org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItem(int, int)"
"org.jfree.chart.ChartRenderingInfoTest.testEquals()","org.jfree.chart.ChartRenderingInfo.equals(java.lang.Object)"
"org.jfree.chart.plot.dial.DialBackgroundTest.testEquals()","org.jfree.chart.plot.dial.DialBackground.equals(java.lang.Object)"
"org.jfree.chart.plot.dial.DialPointerTest.testEquals()","org.jfree.chart.plot.dial.DialPointer.Pin.equals(java.lang.Object)"
"org.jfree.chart.plot.dial.AbstractDialLayerTest.testEquals()","org.jfree.chart.plot.dial.DialCap.equals(java.lang.Object)"
"org.jfree.chart.plot.dial.StandardDialRangeTest.testEquals()","org.jfree.chart.plot.dial.StandardDialRange.equals(java.lang.Object)"
"org.jfree.chart.plot.dial.DialPointerTest.testEqualsPin()","org.jfree.chart.plot.dial.DialPointer.Pin.equals(java.lang.Object)"
"org.jfree.chart.plot.dial.DialPointerTest.testEqualsPointer()","org.jfree.chart.plot.dial.DialPointer.Pointer.equals(java.lang.Object)"
"org.jfree.chart.plot.dial.DialCapTest.testEquals()","org.jfree.chart.plot.dial.DialCap.equals(java.lang.Object)"
"org.jfree.chart.plot.dial.StandardDialFrameTest.testEquals()","org.jfree.chart.plot.dial.StandardDialFrame.equals(java.lang.Object)"
"org.jfree.chart.plot.dial.ArcDialFrameTest.testEquals()","org.jfree.chart.plot.dial.ArcDialFrame.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.LineAndShapeRendererTest.testGetLegendItemSeriesIndex()","org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem(int, int)"
"org.jfree.chart.axis.CategoryLabelPositionsTest.testEquals()","org.jfree.chart.axis.CategoryLabelPositions.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.AreaRendererTest.testGetLegendItemSeriesIndex()","org.jfree.chart.renderer.category.AreaRenderer.getLegendItem(int, int)"
"org.jfree.chart.renderer.category.CategoryStepRendererTest.testGetLegendItemSeriesIndex()","org.jfree.chart.renderer.category.CategoryStepRenderer.getLegendItem(int, int)"
"org.jfree.chart.renderer.category.BarRendererTest.testGetLegendItemSeriesIndex()","org.jfree.chart.renderer.category.BarRenderer.getLegendItem(int, int)"
"org.jfree.chart.axis.CategoryLabelPositionsTest.testHashCode()","org.jfree.chart.axis.CategoryLabelPositions.hashCode()"
"org.jfree.chart.renderer.xy.XYAreaRendererTest.testGetLegendItemSeriesIndex()","org.jfree.chart.renderer.xy.XYAreaRenderer.getLegendItem(int, int)"
"org.jfree.chart.plot.PolarPlotTest.testEquals()","org.jfree.chart.plot.PolarPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.XYPlotTest.testEquals()","org.jfree.chart.plot.XYPlot.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.XYDotRendererTest.testGetLegendItemSeriesIndex()","org.jfree.chart.renderer.xy.XYDotRenderer.getLegendItem(int, int)"
"org.jfree.chart.renderer.xy.XYAreaRenderer2Test.testGetLegendItemSeriesIndex()","org.jfree.chart.renderer.xy.XYAreaRenderer2.getLegendItem(int, int)"
"org.jfree.chart.ChartPanelTest.testSetMouseWheelEnabled()","org.jfree.chart.ChartPanel.setMouseWheelEnabled(boolean)"
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDatasetTest.testAdd()","org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.add(java.util.Date, org.jfree.data.statistics.BoxAndWhiskerItem)"
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDatasetTest.testGetRangeBounds()","org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getRangeBounds(boolean)"
"org.jfree.data.gantt.TaskTest.testEquals()","org.jfree.data.gantt.Task.equals(java.lang.Object)"
"org.jfree.data.general.DefaultKeyedValueDatasetTest.testCloneIndependence()","org.jfree.data.general.DefaultKeyedValueDataset.clone()"
"org.jfree.data.general.DefaultKeyedValueDatasetTest.testEquals()","org.jfree.data.general.DefaultKeyedValueDataset.equals(java.lang.Object)"
"org.jfree.data.xy.XYSeriesCollectionTest.testRemoveSeries()","org.jfree.data.xy.XYSeriesCollection.removeSeries(int)"
"org.jfree.data.xy.XYSeriesTest.testSetKey()","org.jfree.data.general.Series.setKey(java.lang.Comparable)"
"org.jfree.data.xy.XYSeriesCollectionTest.testIndexOf()","org.jfree.data.xy.XYSeriesCollection.indexOf(org.jfree.data.xy.XYSeries)"
"org.jfree.data.xy.DefaultXYZDatasetTest.testAddSeries()","org.jfree.data.xy.DefaultXYZDataset.addSeries(java.lang.Comparable, double[][])"
"org.jfree.data.xy.DefaultXYZDatasetTest.testGetSeriesKey()","org.jfree.data.xy.DefaultXYZDataset.getSeriesKey(int)"
"org.jfree.chart.renderer.xy.XYBubbleRendererTest.testGetLegendItemSeriesIndex()","org.jfree.chart.renderer.xy.XYBubbleRenderer.getLegendItem(int, int)"
"org.jfree.chart.GanttChartTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.CategoryToolTipGenerator)"
"org.jfree.data.time.DateRangeTest.testEquals()","org.jfree.data.Range.equals(java.lang.Object)"
"org.jfree.chart.axis.DateAxisTest.testSetRange()","org.jfree.chart.axis.DateAxis.setRange(java.util.Date, java.util.Date)"
"org.jfree.chart.axis.DateAxisTest.testSetRange()","org.jfree.chart.axis.DateAxis.setRange(org.jfree.data.Range, boolean, boolean)"
"org.jfree.chart.title.TextTitleTest.testEquals()","org.jfree.chart.title.TextTitle.equals(java.lang.Object)"
"org.jfree.chart.plot.PiePlotTest.testDrawWithNullLegendLabels()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.plot.PiePlot3DTest.testDrawWithNullDataset()","org.jfree.chart.JFreeChart.draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.awt.geom.Point2D, org.jfree.chart.ChartRenderingInfo)"
"org.jfree.chart.title.DateTitleTest.testEquals()","org.jfree.chart.title.TextTitle.equals(java.lang.Object)"
"org.jfree.chart.title.DateTitleTest.testHashcode()","org.jfree.chart.title.TextTitle.hashCode()"
"org.jfree.data.category.SlidingCategoryDatasetTest.testEquals()","org.jfree.data.category.SlidingCategoryDataset.equals(java.lang.Object)"
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testEquals()","org.jfree.data.category.DefaultIntervalCategoryDataset.equals(java.lang.Object)"
"org.jfree.data.time.TimeTableXYDatasetTest.testClear()","org.jfree.data.time.TimeTableXYDataset.clear()"
"org.jfree.data.time.TimeTableXYDatasetTest.testClone()","org.jfree.data.time.TimeTableXYDataset.clone()"
"org.jfree.data.time.TimeTableXYDatasetTest.testEquals()","org.jfree.data.time.TimeTableXYDataset.equals(java.lang.Object)"
"org.jfree.data.time.TimeTableXYDatasetTest.testGetTimePeriod()","org.jfree.data.time.TimeTableXYDataset.getTimePeriod(int)"
"org.jfree.chart.renderer.xy.XYLineAndShapeRendererTest.testGetLegendItemSeriesIndex()","org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getLegendItem(int, int)"
"org.jfree.chart.plot.XYPlotTest.testMapDatasetToDomainAxis()","org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis(int, int)"
"org.jfree.chart.ChartPanelTest.test2502355_restoreAutoDomainBounds()","org.jfree.chart.ChartPanel.restoreAutoDomainBounds()"
"org.jfree.chart.plot.XYPlotTest.testAddRangeMarker()","org.jfree.chart.plot.XYPlot.addRangeMarker(org.jfree.chart.plot.Marker)"
"org.jfree.chart.plot.CombinedRangeXYPlotTest.testEquals()","org.jfree.chart.plot.CombinedRangeXYPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.XYPlotTest.testRemoveRangeMarker()","org.jfree.chart.plot.XYPlot.removeRangeMarker(org.jfree.chart.plot.Marker)"
"org.jfree.chart.plot.XYPlotTest.testGetRendererForDataset2()","org.jfree.chart.plot.XYPlot.getRendererForDataset(org.jfree.data.xy.XYDataset)"
"org.jfree.chart.plot.XYPlotTest.testEquals_ObjectList5()","org.jfree.chart.plot.XYPlot.equals(java.lang.Object)"
"org.jfree.chart.title.LegendTitleTest.testEquals()","org.jfree.chart.title.LegendTitle.equals(java.lang.Object)"
"org.jfree.chart.ChartPanelTest.test2502355_zoomOutRange()","org.jfree.chart.ChartPanel.zoomOutRange(double, double)"
"org.jfree.chart.ChartPanelTest.test2502355_zoomOutBoth()","org.jfree.chart.ChartPanel.zoomOutBoth(double, double)"
"org.jfree.chart.plot.XYPlotTest.testGetRendererForDataset()","org.jfree.chart.plot.XYPlot.getRendererForDataset(org.jfree.data.xy.XYDataset)"
"org.jfree.chart.plot.CombinedRangeXYPlotTest.testRemoveSubplot()","org.jfree.chart.plot.CombinedRangeXYPlot.remove(org.jfree.chart.plot.XYPlot)"
"org.jfree.chart.ChartPanelTest.test2502355_restoreAutoRangeBounds()","org.jfree.chart.ChartPanel.restoreAutoRangeBounds()"
"org.jfree.chart.plot.XYPlotTest.testGetRangeAxisForDataset()","org.jfree.chart.plot.XYPlot.getRangeAxisForDataset(int)"
"org.jfree.chart.plot.CombinedDomainXYPlotTest.testEquals()","org.jfree.chart.plot.CombinedDomainXYPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.XYPlotTest.testGetDomainAxisForDataset()","org.jfree.chart.plot.XYPlot.getDomainAxisForDataset(int)"
"org.jfree.chart.plot.XYPlotTest.testEquals_ObjectList2()","org.jfree.chart.plot.XYPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.XYPlotTest.testEquals_ObjectList()","org.jfree.chart.plot.XYPlot.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.StandardXYItemRendererTest.testGetLegendItemSeriesIndex()","org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem(int, int)"
"org.jfree.chart.plot.XYPlotTest.testAddDomainMarker()","org.jfree.chart.plot.XYPlot.addDomainMarker(org.jfree.chart.plot.Marker)"
"org.jfree.chart.ChartPanelTest.test2502355_zoomInBoth()","org.jfree.chart.ChartPanel.zoomInBoth(double, double)"
"org.jfree.chart.ChartPanelTest.test2502355_zoomInRange()","org.jfree.chart.ChartPanel.zoomInRange(double, double)"
"org.jfree.chart.ChartPanelTest.test2502355_zoomOutDomain()","org.jfree.chart.ChartPanel.zoomOutDomain(double, double)"
"org.jfree.chart.plot.XYPlotTest.testMapDatasetToRangeAxis()","org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis(int, int)"
"org.jfree.chart.ChartPanelTest.test2502355_zoomInDomain()","org.jfree.chart.ChartPanel.zoomInDomain(double, double)"
"org.jfree.chart.plot.CombinedDomainXYPlotTest.testRemoveSubplot()","org.jfree.chart.plot.CombinedDomainXYPlot.remove(org.jfree.chart.plot.XYPlot)"
"org.jfree.chart.ChartPanelTest.test2502355_zoom()","org.jfree.chart.ChartPanel.zoom(java.awt.geom.Rectangle2D)"
"org.jfree.chart.plot.XYPlotTest.testRemoveAnnotation()","org.jfree.chart.plot.XYPlot.removeAnnotation(org.jfree.chart.annotations.XYAnnotation)"
"org.jfree.chart.plot.XYPlotTest.testEquals_ObjectList3()","org.jfree.chart.plot.XYPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.XYPlotTest.testEquals_ObjectList4()","org.jfree.chart.plot.XYPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.XYPlotTest.testRemoveDomainMarker()","org.jfree.chart.plot.XYPlot.removeDomainMarker(org.jfree.chart.plot.Marker)"
"org.jfree.chart.plot.XYPlotTest.testSetRenderer()","org.jfree.chart.plot.XYPlot.setRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)"
"org.jfree.chart.ChartPanelTest.test2502355_restoreAutoBounds()","org.jfree.chart.ChartPanel.restoreAutoBounds()"
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2Test.testFindRangeBounds()","org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.findRangeBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.chart.renderer.xy.XYDifferenceRendererTest.testGetLegendItemSeriesIndex()","org.jfree.chart.renderer.xy.XYDifferenceRenderer.getLegendItem(int, int)"
"org.jfree.chart.plot.XYPlotTest.testCloneIndependence()","org.jfree.chart.plot.XYPlot.clone()"
"org.jfree.chart.plot.XYPlotTest.testGetLegendItems()","org.jfree.chart.plot.XYPlot.getLegendItems()"
"org.jfree.chart.ChartPanelTest.testSetChart()","org.jfree.chart.ChartPanel.setChart(org.jfree.chart.JFreeChart)"
"org.jfree.chart.title.LegendTitleTest.testHashcode()","org.jfree.chart.title.Title.hashCode()"
"org.jfree.data.time.TimeSeriesTest.testGetMinY2()","org.jfree.data.time.TimeSeries.getMinY()"
"org.jfree.data.time.TimeSeriesTest.testGetMaxY2()","org.jfree.data.time.TimeSeries.getMaxY()"
"org.jfree.data.time.TimeSeriesTest.testClone()","org.jfree.data.time.TimeSeries.clone()"
"org.jfree.data.time.TimeSeriesTest.testCreateCopy2()","org.jfree.data.time.TimeSeries.createCopy(int, int)"
"org.jfree.data.time.TimeSeriesTest.testCreateCopy3()","org.jfree.data.time.TimeSeries.createCopy(int, int)"
"org.jfree.data.time.TimeSeriesTest.testAdd()","org.jfree.data.time.TimeSeries.add(org.jfree.data.time.RegularTimePeriod, double)"
"org.jfree.data.time.TimeSeriesTest.testCreateCopy1()","org.jfree.data.time.TimeSeries.createCopy(org.jfree.data.time.RegularTimePeriod, org.jfree.data.time.RegularTimePeriod)"
"org.jfree.data.time.TimeSeriesTest.testGetIndex()","org.jfree.data.time.TimeSeries.getIndex(org.jfree.data.time.RegularTimePeriod)"
"org.jfree.data.time.TimeSeriesTest.testUpdate_RegularTimePeriod()","org.jfree.data.time.TimeSeries.update(org.jfree.data.time.RegularTimePeriod, double)"
"org.jfree.data.time.TimeSeriesTest.testUpdate_RegularTimePeriod()","org.jfree.data.time.TimeSeries.update(org.jfree.data.time.RegularTimePeriod, java.lang.Number)"
"org.jfree.data.time.TimeSeriesTest.testAdd_TimeSeriesDataItem()","org.jfree.data.time.TimeSeries.add(org.jfree.data.time.TimeSeriesDataItem)"
"org.jfree.data.time.TimeSeriesTest.testGetDataItem1()","org.jfree.data.time.TimeSeries.getDataItem(int)"
"org.jfree.data.time.TimeSeriesTest.testGetMaxY()","org.jfree.data.time.TimeSeries.getMaxY()"
"org.jfree.data.time.TimeSeriesTest.testAddOrUpdate3()","org.jfree.data.time.TimeSeries.addOrUpdate(org.jfree.data.time.RegularTimePeriod, double)"
"org.jfree.data.time.TimeSeriesTest.testDelete3()","org.jfree.data.time.TimeSeries.delete(int, int)"
"org.jfree.data.time.TimeSeriesTest.testClone2()","org.jfree.data.time.TimeSeries.clone()"
"org.jfree.data.time.TimeSeriesTest.testDelete_RegularTimePeriod()","org.jfree.data.time.TimeSeries.delete(org.jfree.data.time.RegularTimePeriod)"
"org.jfree.data.time.TimeSeriesTest.testDelete2()","org.jfree.data.time.TimeSeries.delete(org.jfree.data.time.RegularTimePeriod)"
"org.jfree.data.time.TimeSeriesTest.testRemoveAgedItems5()","org.jfree.data.time.TimeSeries.removeAgedItems(long, boolean)"
"org.jfree.data.time.TimeSeriesTest.testRemoveAgedItems()","org.jfree.data.time.TimeSeries.removeAgedItems(boolean)"
"org.jfree.data.time.TimeSeriesTest.testFindValueRange2()","org.jfree.data.time.TimeSeries.findValueRange(org.jfree.data.Range, org.jfree.data.time.TimePeriodAnchor, java.util.TimeZone)"
"org.jfree.data.time.TimeSeriesTest.testDelete()","org.jfree.data.time.TimeSeries.delete(int, int)"
"org.jfree.data.time.TimeSeriesTest.testFindValueRange()","org.jfree.data.time.TimeSeries.findValueRange()"
"org.jfree.data.time.TimeSeriesTest.testAddOrUpdate4()","org.jfree.data.time.TimeSeries.addOrUpdate(org.jfree.data.time.RegularTimePeriod, double)"
"org.jfree.data.time.TimeSeriesTest.testAddOrUpdate4()","org.jfree.data.time.TimeSeries.addOrUpdate(org.jfree.data.time.TimeSeriesDataItem)"
"org.jfree.data.time.TimeSeriesTest.testAddOrUpdate()","org.jfree.data.time.TimeSeries.addOrUpdate(org.jfree.data.time.RegularTimePeriod, double)"
"org.jfree.data.time.TimeSeriesTest.testSetMaximumItemCount()","org.jfree.data.time.TimeSeries.setMaximumItemCount(int)"
"org.jfree.data.time.TimeSeriesTest.testClear()","org.jfree.data.time.TimeSeries.clear()"
"org.jfree.data.time.TimeSeriesTest.testAddValue()","org.jfree.data.time.TimeSeries.add(org.jfree.data.time.RegularTimePeriod, java.lang.Number)"
"org.jfree.data.time.TimeSeriesTest.testAddOrUpdate2()","org.jfree.data.time.TimeSeries.addOrUpdate(org.jfree.data.time.RegularTimePeriod, double)"
"org.jfree.data.time.TimeSeriesTest.testEquals()","org.jfree.data.time.TimeSeries.equals(java.lang.Object)"
"org.jfree.data.time.TimeSeriesTest.testRemoveAgedItems2()","org.jfree.data.time.TimeSeries.removeAgedItems(long, boolean)"
"org.jfree.data.time.TimeSeriesTest.testHashCode()","org.jfree.data.time.TimeSeries.hashCode()"
"org.jfree.data.time.TimeSeriesTest.testGetMinY()","org.jfree.data.time.TimeSeries.getMinY()"
"org.jfree.chart.axis.PeriodAxisTest.testEquals()","org.jfree.chart.axis.PeriodAxis.equals(java.lang.Object)"
"org.jfree.chart.axis.PeriodAxisTest.testEqualsWithLocale()","org.jfree.chart.axis.PeriodAxis.equals(java.lang.Object)"
"org.jfree.chart.axis.PeriodAxisTest.testHashCode()","org.jfree.chart.axis.PeriodAxis.hashCode()"
"org.jfree.chart.plot.PolarPlotTest.testTranslateToJava2D_LogAxis()","org.jfree.chart.plot.PolarPlot.translateToJava2D(double, double, org.jfree.chart.axis.ValueAxis, java.awt.geom.Rectangle2D)"
"org.jfree.chart.plot.PolarPlotTest.testTranslateToJava2D_NumberAxis()","org.jfree.chart.plot.PolarPlot.translateToJava2D(double, double, org.jfree.chart.axis.ValueAxis, java.awt.geom.Rectangle2D)"
"org.jfree.chart.renderer.category.GanttRendererTest.testEquals()","org.jfree.chart.renderer.category.GanttRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.GanttRendererTest.testHashcode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.data.statistics.HistogramDatasetTest.testGetSeriesKey()","org.jfree.data.statistics.HistogramDataset.getSeriesKey(int)"
"org.jfree.data.statistics.HistogramDatasetTest.testEquals()","org.jfree.data.statistics.HistogramDataset.equals(java.lang.Object)"
"org.jfree.data.statistics.HistogramDatasetTest.testAddSeries2()","org.jfree.data.statistics.HistogramDataset.addSeries(java.lang.Comparable, double[], int)"
"org.jfree.chart.renderer.xy.CandlestickRendererTest.testEquals()","org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)"
"org.jfree.chart.JFreeChartTest.testEquals()","org.jfree.chart.JFreeChart.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.CandlestickRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.xy.CandlestickRenderer.findRangeBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.chart.entity.ContourEntityTest.testEquals()","org.jfree.chart.entity.ContourEntity.equals(java.lang.Object)"
"org.jfree.chart.plot.FastScatterPlotTest.testEquals2()","org.jfree.chart.plot.FastScatterPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.FastScatterPlotTest.testEquals()","org.jfree.chart.plot.FastScatterPlot.equals(java.lang.Object)"
"org.jfree.chart.title.TitleTest.testEquals()","org.jfree.chart.title.TextTitle.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.LevelRendererTest.testEquals()","org.jfree.chart.renderer.category.LevelRenderer.equals(java.lang.Object)"
"org.jfree.chart.title.LegendGraphicTest.testHashcode()","org.jfree.chart.title.LegendGraphic.hashCode()"
"org.jfree.chart.title.CompositeTitleTest.testHashcode()","org.jfree.chart.title.Title.hashCode()"
"org.jfree.chart.title.ShortTextTitleTest.testEquals()","org.jfree.chart.title.TextTitle.equals(java.lang.Object)"
"org.jfree.chart.block.LabelBlockTest.testEquals()","org.jfree.chart.block.LabelBlock.equals(java.lang.Object)"
"org.jfree.chart.block.BlockContainerTest.testEquals()","org.jfree.chart.block.BlockContainer.equals(java.lang.Object)"
"org.jfree.chart.title.PaintScaleLegendTest.testEquals()","org.jfree.chart.title.PaintScaleLegend.equals(java.lang.Object)"
"org.jfree.chart.title.ImageTitleTest.testHashcode()","org.jfree.chart.title.Title.hashCode()"
"org.jfree.chart.title.TitleTest.testHashcode()","org.jfree.chart.title.TextTitle.hashCode()"
"org.jfree.chart.block.AbstractBlockTest.testEquals()","org.jfree.chart.block.AbstractBlock.equals(java.lang.Object)"
"org.jfree.chart.JFreeChartTest.testEquals2()","org.jfree.chart.JFreeChart.equals(java.lang.Object)"
"org.jfree.chart.title.TextTitleTest.testHashcode()","org.jfree.chart.title.TextTitle.hashCode()"
"org.jfree.chart.title.ImageTitleTest.testEquals()","org.jfree.chart.title.ImageTitle.equals(java.lang.Object)"
"org.jfree.chart.title.LegendGraphicTest.testEquals()","org.jfree.chart.title.LegendGraphic.equals(java.lang.Object)"
"org.jfree.chart.title.ShortTextTitleTest.testHashcode()","org.jfree.chart.title.TextTitle.hashCode()"
"org.jfree.chart.block.BorderArrangementTest.testEquals()","org.jfree.chart.block.BorderArrangement.equals(java.lang.Object)"
"org.jfree.chart.title.CompositeTitleTest.testEquals()","org.jfree.chart.title.CompositeTitle.equals(java.lang.Object)"
"org.jfree.chart.block.EmptyBlockTest.testEquals()","org.jfree.chart.block.AbstractBlock.equals(java.lang.Object)"
"org.jfree.chart.block.BlockBorderTest.testEquals()","org.jfree.chart.block.BlockBorder.equals(java.lang.Object)"
"org.jfree.chart.block.ColorBlockTest.testEquals()","org.jfree.chart.block.ColorBlock.equals(java.lang.Object)"
"org.jfree.chart.title.PaintScaleLegendTest.testHashcode()","org.jfree.chart.title.Title.hashCode()"
"org.jfree.data.DefaultKeyedValuesTest.testInsertValue()","org.jfree.data.DefaultKeyedValues.insertValue(int, java.lang.Comparable, double)"
"org.jfree.chart.plot.ThermometerPlotTest.testSetUnits()","org.jfree.chart.plot.ThermometerPlot.setUnits(java.lang.String)"
"org.jfree.chart.plot.MultiplePiePlotTest.testGetLegendItems()","org.jfree.chart.LegendItemCollection.get(int)"
"org.jfree.chart.plot.MultiplePiePlotTest.testGetLegendItems()","org.jfree.chart.plot.MultiplePiePlot.getLegendItems()"
"org.jfree.chart.plot.RingPlotTest.testEquals()","org.jfree.chart.plot.RingPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.CategoryPlotTest.testAddRangeMarker()","org.jfree.chart.plot.CategoryPlot.addRangeMarker(org.jfree.chart.plot.Marker)"
"org.jfree.chart.plot.PiePlotTest.testGetLegendItems()","org.jfree.chart.plot.PiePlot.getLegendItems()"
"org.jfree.chart.plot.ThermometerPlotTest.testEquals()","org.jfree.chart.plot.ThermometerPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.PiePlot3DTest.testEquals()","org.jfree.chart.plot.PiePlot3D.equals(java.lang.Object)"
"org.jfree.chart.plot.CategoryPlotTest.testMapDatasetToDomainAxis()","org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis(int, int)"
"org.jfree.chart.JFreeChartTest.testAddSubtitle()","org.jfree.chart.JFreeChart.addSubtitle(int, org.jfree.chart.title.Title)"
"org.jfree.chart.JFreeChartTest.testAddSubtitle()","org.jfree.chart.JFreeChart.addSubtitle(org.jfree.chart.title.Title)"
"org.jfree.chart.plot.MeterPlotTest.testEquals()","org.jfree.chart.plot.MeterPlot.equals(java.lang.Object)"
"org.jfree.chart.TimeSeriesChartTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.XYToolTipGenerator)"
"org.jfree.chart.XYStepAreaChartTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.XYToolTipGenerator)"
"org.jfree.chart.XYStepChartTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.XYToolTipGenerator)"
"org.jfree.chart.XYBarChartTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.XYToolTipGenerator)"
"org.jfree.chart.plot.CombinedRangeCategoryPlotTest.testRemoveSubplot()","org.jfree.chart.plot.CombinedRangeCategoryPlot.remove(org.jfree.chart.plot.CategoryPlot)"
"org.jfree.chart.plot.CategoryPlotTest.testMapDatasetToRangeAxis()","org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis(int, int)"
"org.jfree.chart.JFreeChartTest.testGetSubtitle()","org.jfree.chart.JFreeChart.getSubtitle(int)"
"org.jfree.chart.plot.CategoryPlotTest.testAddDomainMarker()","org.jfree.chart.plot.CategoryPlot.addDomainMarker(org.jfree.chart.plot.CategoryMarker)"
"org.jfree.chart.plot.CombinedRangeCategoryPlotTest.testEquals()","org.jfree.chart.plot.CombinedRangeCategoryPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.CategoryPlotTest.testEquals_ObjectList5()","org.jfree.chart.plot.CategoryPlot.equals(java.lang.Object)"
"org.jfree.chart.XYAreaChartTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.XYToolTipGenerator)"
"org.jfree.chart.plot.SpiderWebPlotTest.testEquals()","org.jfree.chart.plot.SpiderWebPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.CompassPlotTest.testEquals()","org.jfree.chart.plot.CompassPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.CategoryPlotTest.testGetRangeAxisIndex()","org.jfree.chart.plot.CategoryPlot.getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)"
"org.jfree.chart.plot.PiePlotTest.testEquals()","org.jfree.chart.plot.PiePlot.equals(java.lang.Object)"
"org.jfree.chart.plot.CategoryPlotTest.testEquals_ObjectList3()","org.jfree.chart.plot.CategoryPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.CategoryPlotTest.testSetRenderer()","org.jfree.chart.plot.CategoryPlot.setRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)"
"org.jfree.chart.plot.CategoryPlotTest.testEquals_ObjectList2()","org.jfree.chart.plot.CategoryPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.PolarPlotTest.testGetLegendItems()","org.jfree.chart.LegendItemCollection.get(int)"
"org.jfree.chart.plot.PolarPlotTest.testGetLegendItems()","org.jfree.chart.plot.PolarPlot.getLegendItems()"
"org.jfree.chart.plot.CategoryPlotTest.testEquals_ObjectList4()","org.jfree.chart.plot.CategoryPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.CategoryPlotTest.testEquals_ObjectList()","org.jfree.chart.plot.CategoryPlot.equals(java.lang.Object)"
"org.jfree.chart.plot.CategoryPlotTest.testGetRendererForDataset2()","org.jfree.chart.plot.CategoryPlot.getRendererForDataset(org.jfree.data.category.CategoryDataset)"
"org.jfree.chart.plot.CategoryPlotTest.testGetRangeAxisForDataset()","org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset(int)"
"org.jfree.chart.plot.PolarPlotTest.testGetLegendItems2()","org.jfree.chart.LegendItemCollection.get(int)"
"org.jfree.chart.plot.PolarPlotTest.testGetLegendItems2()","org.jfree.chart.plot.PolarPlot.getLegendItems()"
"org.jfree.chart.JFreeChartTest.testGetSubtitles()","org.jfree.chart.JFreeChart.getSubtitles()"
"org.jfree.chart.plot.PolarPlotTest.testTranslateToJava2D_NumberAxisAndMargin()","org.jfree.chart.plot.PolarPlot.translateToJava2D(double, double, org.jfree.chart.axis.ValueAxis, java.awt.geom.Rectangle2D)"
"org.jfree.chart.plot.CategoryPlotTest.testGetDomainAxisIndex()","org.jfree.chart.plot.CategoryPlot.getDomainAxisIndex(org.jfree.chart.axis.CategoryAxis)"
"org.jfree.chart.ScatterPlotTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.XYToolTipGenerator)"
"org.jfree.chart.plot.CategoryPlotTest.testGetDomainAxisForDataset()","org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset(int)"
"org.jfree.chart.plot.PlotTest.testEquals()","org.jfree.chart.plot.PiePlot.equals(java.lang.Object)"
"org.jfree.chart.XYLineChartTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.XYToolTipGenerator)"
"org.jfree.chart.renderer.xy.XYBarRendererTest.testFindRangeBounds2()","org.jfree.chart.renderer.xy.XYBarRenderer.findRangeBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.chart.renderer.xy.XYBarRendererTest.testFindDomainBounds2()","org.jfree.chart.renderer.xy.XYBarRenderer.findDomainBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testGetLegendItemSeriesIndex()","org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.getLegendItem(int, int)"
"org.jfree.chart.renderer.category.LevelRendererTest.testGetLegendItemSeriesIndex()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem(int, int)"
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testGetLegendItem()","org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.getLegendItem(int, int)"
"org.jfree.chart.renderer.category.BarRendererTest.testGetLegendItem()","org.jfree.chart.renderer.category.BarRenderer.getLegendItem(int, int)"
"org.jfree.data.time.MillisecondTest.testHashcode()","org.jfree.data.time.Millisecond.hashCode()"
"org.jfree.data.time.MillisecondTest.testNext()","org.jfree.data.time.Millisecond.next()"
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.findRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateToFindRangeBounds_StatisticalCategoryDataset()","org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset, java.util.List, boolean)"
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testAdd()","org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add(double, double, java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.KeyedObjects2DTest.testRemoveColumnByIndex()","org.jfree.data.KeyedObjects2D.removeColumn(int)"
"org.jfree.data.statistics.DefaultMultiValueCategoryDatasetTest.testGetColumnCount()","org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getColumnCount()"
"org.jfree.data.KeyedObjects2DTest.testRemoveColumnByKey()","org.jfree.data.KeyedObjects2D.removeColumn(java.lang.Comparable)"
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDatasetTest.testRemove()","org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.remove(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testGetRangeBounds()","org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds(boolean)"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateRangeBounds_IntervalCategoryDataset()","org.jfree.data.general.DatasetUtilities.iterateRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDatasetTest.testAddUpdatesCachedRange()","org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.add(org.jfree.data.statistics.BoxAndWhiskerItem, java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.KeyedObjects2DTest.testSetObject()","org.jfree.data.KeyedObjects2D.setObject(java.lang.Object, java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.statistics.DefaultMultiValueCategoryDatasetTest.testGetValue()","org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getValue(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.chart.renderer.category.StatisticalBarRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.category.StatisticalBarRenderer.findRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testRemove()","org.jfree.data.statistics.DefaultStatisticalCategoryDataset.remove(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.statistics.DefaultMultiValueCategoryDatasetTest.testAddValue()","org.jfree.data.statistics.DefaultMultiValueCategoryDataset.add(java.util.List, java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDatasetTest.testAdd()","org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.add(org.jfree.data.statistics.BoxAndWhiskerItem, java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testGetRangeBounds2()","org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds(boolean)"
"org.jfree.data.KeyedObjects2DTest.testRemoveRowByKey()","org.jfree.data.KeyedObjects2D.removeRow(java.lang.Comparable)"
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDatasetTest.testGetRangeBounds()","org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean)"
"org.jfree.chart.renderer.category.ScatterRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.category.ScatterRenderer.findRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testGetRangeLowerBound()","org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeLowerBound(boolean)"
"org.jfree.data.statistics.DefaultMultiValueCategoryDatasetTest.testGetRowCount()","org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getRowCount()"
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testGetRangeUpperBound()","org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeUpperBound(boolean)"
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDatasetTest.testEquals()","org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.equals(java.lang.Object)"
"org.jfree.data.KeyedObjects2DTest.testEquals()","org.jfree.data.KeyedObjects2D.equals(java.lang.Object)"
"org.jfree.data.KeyedObjects2DTest.testRemoveRowByIndex()","org.jfree.data.KeyedObjects2D.removeRow(int)"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateToFindRangeBounds_MultiValueCategoryDataset()","org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset, java.util.List, boolean)"
"org.jfree.data.statistics.DefaultMultiValueCategoryDatasetTest.testEquals()","org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals(java.lang.Object)"
"org.jfree.chart.axis.DateAxisTest.testEquals()","org.jfree.chart.axis.DateAxis.equals(java.lang.Object)"
"org.jfree.chart.axis.SegmentedTimelineTest.testHashCode()","org.jfree.chart.axis.SegmentedTimeline.hashCode()"
"org.jfree.chart.axis.SegmentedTimelineTest.testEquals()","org.jfree.chart.axis.SegmentedTimeline.equals(java.lang.Object)"
"org.jfree.data.time.HourTest.testGetFirstMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getFirstMillisecond(java.util.TimeZone)"
"org.jfree.data.time.DayTest.testGetStart()","org.jfree.data.time.RegularTimePeriod.getStart()"
"org.jfree.data.time.HourTest.testLastHourNext()","org.jfree.data.time.Hour.next()"
"org.jfree.data.time.HourTest.testEquals()","org.jfree.data.time.Hour.equals(java.lang.Object)"
"org.jfree.data.time.DayTest.testGetFirstMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getFirstMillisecond(java.util.TimeZone)"
"org.jfree.data.time.HourTest.testNext()","org.jfree.data.time.Hour.next()"
"org.jfree.data.time.DayTest.testGetLastMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getLastMillisecond(java.util.TimeZone)"
"org.jfree.data.time.SecondTest.testGetLastMillisecondWithCalendar()","org.jfree.data.time.Second.getLastMillisecond(java.util.Calendar)"
"org.jfree.data.time.SecondTest.testGetFirstMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getFirstMillisecond(java.util.TimeZone)"
"org.jfree.data.time.MillisecondTest.testEqualsSelf()","org.jfree.data.time.Millisecond.equals(java.lang.Object)"
"org.jfree.data.time.TimePeriodValueTest.testEquals()","org.jfree.data.time.TimePeriodValue.equals(java.lang.Object)"
"org.jfree.data.time.HourTest.testGetLastMillisecondWithCalendar()","org.jfree.data.time.Hour.getLastMillisecond(java.util.Calendar)"
"org.jfree.data.time.SecondTest.testEquals()","org.jfree.data.time.Second.equals(java.lang.Object)"
"org.jfree.data.time.HourTest.testEqualsSelf()","org.jfree.data.time.Hour.equals(java.lang.Object)"
"org.jfree.data.time.SecondTest.testNext()","org.jfree.data.time.Second.next()"
"org.jfree.data.time.DayTest.testNext()","org.jfree.data.time.Day.next()"
"org.jfree.data.time.MinuteTest.testEqualsSelf()","org.jfree.data.time.Minute.equals(java.lang.Object)"
"org.jfree.data.xy.DefaultWindDatasetTest.testEquals()","org.jfree.data.xy.DefaultWindDataset.equals(java.lang.Object)"
"org.jfree.data.time.MinuteTest.testGetStart()","org.jfree.data.time.RegularTimePeriod.getStart()"
"org.jfree.data.time.DayTest.test1Jan1900Previous()","org.jfree.data.time.Day.previous()"
"org.jfree.data.time.HourTest.testGetEnd()","org.jfree.data.time.RegularTimePeriod.getEnd()"
"org.jfree.data.time.MinuteTest.testHashcode()","org.jfree.data.time.Minute.hashCode()"
"org.jfree.chart.axis.PeriodAxisLabelInfoTest.testCreateInstance()","org.jfree.chart.axis.PeriodAxisLabelInfo.createInstance(java.util.Date, java.util.TimeZone, java.util.Locale)"
"org.jfree.chart.axis.PeriodAxisLabelInfoTest.testCreateInstance()","org.jfree.date.SerialDate.createInstance(int, int, int)"
"org.jfree.data.time.MillisecondTest.testGetLastMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getLastMillisecond(java.util.TimeZone)"
"org.jfree.data.time.TimeSeriesDataItemTest.testEqualsSelf()","org.jfree.data.time.TimeSeriesDataItem.equals(java.lang.Object)"
"org.jfree.data.time.MinuteTest.testGetSerialIndex()","org.jfree.data.time.Minute.getSerialIndex()"
"org.jfree.data.time.SecondTest.testEqualsSelf()","org.jfree.data.time.Second.equals(java.lang.Object)"
"org.jfree.data.time.DayTest.test31Dec9999Previous()","org.jfree.data.time.Day.previous()"
"org.jfree.data.time.MinuteTest.testGetLastMillisecondWithCalendar()","org.jfree.data.time.Minute.getLastMillisecond(java.util.Calendar)"
"org.jfree.data.time.HourTest.testFirstHourPrevious()","org.jfree.data.time.Hour.previous()"
"org.jfree.data.time.MinuteTest.testGetFirstMillisecond()","org.jfree.data.time.Minute.getFirstMillisecond()"
"org.jfree.data.time.HourTest.testGetFirstMillisecondWithCalendar()","org.jfree.data.time.Hour.getFirstMillisecond(java.util.Calendar)"
"org.jfree.data.time.MinuteTest.testGetFirstMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getFirstMillisecond(java.util.TimeZone)"
"org.jfree.data.time.DayTest.testGetFirstMillisecondWithCalendar()","org.jfree.data.time.Day.getFirstMillisecond(java.util.Calendar)"
"org.jfree.data.time.DayTest.test31Dec9999Next()","org.jfree.data.time.Day.next()"
"org.jfree.data.time.SecondTest.testGetEnd()","org.jfree.data.time.RegularTimePeriod.getEnd()"
"org.jfree.data.time.MinuteTest.testEquals()","org.jfree.data.time.Minute.equals(java.lang.Object)"
"org.jfree.data.time.TimePeriodValuesTest.testEquals()","org.jfree.data.time.TimePeriodValues.equals(java.lang.Object)"
"org.jfree.data.time.HourTest.testFirstHourNext()","org.jfree.data.time.Hour.next()"
"org.jfree.data.time.MinuteTest.testGetLastMillisecond()","org.jfree.data.time.Minute.getLastMillisecond()"
"org.jfree.data.time.MillisecondTest.testGetLastMillisecondWithCalendar()","org.jfree.data.time.Millisecond.getLastMillisecond(java.util.Calendar)"
"org.jfree.data.time.MinuteTest.testGetEnd()","org.jfree.data.time.RegularTimePeriod.getEnd()"
"org.jfree.data.time.TimeSeriesDataItemTest.testEquals()","org.jfree.data.time.TimeSeriesDataItem.equals(java.lang.Object)"
"org.jfree.data.time.DayTest.testGetLastMillisecond()","org.jfree.data.time.Day.getLastMillisecond()"
"org.jfree.data.time.DayTest.testEqualsSelf()","org.jfree.data.time.Day.equals(java.lang.Object)"
"org.jfree.data.time.HourTest.testParseHour()","org.jfree.data.time.Hour.parseHour(java.lang.String)"
"org.jfree.data.time.HourTest.testGetLastMillisecond()","org.jfree.data.time.Hour.getLastMillisecond()"
"org.jfree.data.time.MinuteTest.testGetFirstMillisecondWithCalendar()","org.jfree.data.time.Minute.getFirstMillisecond(java.util.Calendar)"
"org.jfree.data.time.HourTest.testGetSerialIndex()","org.jfree.data.time.Hour.getSerialIndex()"
"org.jfree.data.time.DayTest.testGetEnd()","org.jfree.data.time.RegularTimePeriod.getEnd()"
"org.jfree.data.xy.DefaultWindDatasetTest.testIndexOf()","org.jfree.data.general.AbstractSeriesDataset.indexOf(java.lang.Comparable)"
"org.jfree.data.time.TimePeriodValueTest.testEqualsSelf()","org.jfree.data.time.TimePeriodValue.equals(java.lang.Object)"
"org.jfree.data.time.HourTest.testLastHourPrevious()","org.jfree.data.time.Hour.previous()"
"org.jfree.data.time.MinuteTest.testNext()","org.jfree.data.time.Minute.next()"
"org.jfree.data.time.DayTest.testGetSerialIndex()","org.jfree.data.time.Day.getSerialIndex()"
"org.jfree.data.time.DayTest.testHashcode()","org.jfree.data.time.Day.hashCode()"
"org.jfree.data.time.MillisecondTest.testGetFirstMillisecond()","org.jfree.data.time.Millisecond.getFirstMillisecond()"
"org.jfree.data.time.HourTest.testGetLastMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getLastMillisecond(java.util.TimeZone)"
"org.jfree.data.time.MillisecondTest.testGetLastMillisecond()","org.jfree.data.time.Millisecond.getLastMillisecond()"
"org.jfree.data.time.SecondTest.testGetFirstMillisecond()","org.jfree.data.time.Second.getFirstMillisecond()"
"org.jfree.data.time.MillisecondTest.testGetEnd()","org.jfree.data.time.RegularTimePeriod.getEnd()"
"org.jfree.data.time.MinuteTest.testGetLastMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getLastMillisecond(java.util.TimeZone)"
"org.jfree.data.time.DayTest.testGetFirstMillisecond()","org.jfree.data.time.Day.getFirstMillisecond()"
"org.jfree.data.time.HourTest.testHashcode()","org.jfree.data.time.Hour.hashCode()"
"org.jfree.data.time.MillisecondTest.testEquals()","org.jfree.data.time.Millisecond.equals(java.lang.Object)"
"org.jfree.data.time.SecondTest.testHashcode()","org.jfree.data.time.Second.hashCode()"
"org.jfree.data.time.DayTest.testEquals()","org.jfree.data.time.Day.equals(java.lang.Object)"
"org.jfree.data.xy.DefaultWindDatasetTest.testGetSeriesKey()","org.jfree.data.xy.DefaultWindDataset.getSeriesKey(int)"
"org.jfree.data.time.MillisecondTest.testGetFirstMillisecondWithCalendar()","org.jfree.data.time.Millisecond.getFirstMillisecond(java.util.Calendar)"
"org.jfree.data.time.DayTest.testParseDay()","org.jfree.data.time.Day.parseDay(java.lang.String)"
"org.jfree.data.time.SecondTest.testGetLastMillisecond()","org.jfree.data.time.Second.getLastMillisecond()"
"org.jfree.data.time.SecondTest.testGetSerialIndex()","org.jfree.data.time.Second.getSerialIndex()"
"org.jfree.data.time.SecondTest.testGetStart()","org.jfree.data.time.RegularTimePeriod.getStart()"
"org.jfree.data.time.TimePeriodValuesTest.testClone()","org.jfree.data.time.TimePeriodValues.clone()"
"org.jfree.data.time.MillisecondTest.testGetSerialIndex()","org.jfree.data.time.Millisecond.getSerialIndex()"
"org.jfree.data.time.HourTest.testGetStart()","org.jfree.data.time.RegularTimePeriod.getStart()"
"org.jfree.data.time.MillisecondTest.testGetFirstMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getFirstMillisecond(java.util.TimeZone)"
"org.jfree.data.time.SecondTest.testGetFirstMillisecondWithCalendar()","org.jfree.data.time.Second.getFirstMillisecond(java.util.Calendar)"
"org.jfree.data.time.DayTest.test1Jan1900Next()","org.jfree.data.time.Day.next()"
"org.jfree.data.time.MillisecondTest.testGetStart()","org.jfree.data.time.RegularTimePeriod.getStart()"
"org.jfree.data.time.HourTest.testGetFirstMillisecond()","org.jfree.data.time.Hour.getFirstMillisecond()"
"org.jfree.data.time.DayTest.testGetLastMillisecondWithCalendar()","org.jfree.data.time.Day.getLastMillisecond(java.util.Calendar)"
"org.jfree.data.time.SecondTest.testGetLastMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getLastMillisecond(java.util.TimeZone)"
"org.jfree.data.xy.DefaultTableXYDatasetTest.testAddSeries()","org.jfree.data.xy.DefaultTableXYDataset.addSeries(org.jfree.data.xy.XYSeries)"
"org.jfree.data.xy.DefaultTableXYDatasetTest.testAddSeries()","org.jfree.data.xy.XYSeries.add(double, double)"
"org.jfree.data.xy.XYSeriesTest.testEquals()","org.jfree.data.xy.XYSeries.equals(java.lang.Object)"
"org.jfree.data.xy.XYSeriesCollectionTest.testEquals()","org.jfree.data.xy.XYSeriesCollection.equals(java.lang.Object)"
"org.jfree.data.xy.TableXYDatasetTest.testEquals()","org.jfree.data.xy.DefaultTableXYDataset.equals(java.lang.Object)"
"org.jfree.data.xy.DefaultTableXYDatasetTest.testEquals()","org.jfree.data.xy.DefaultTableXYDataset.equals(java.lang.Object)"
"org.jfree.data.xy.XYSeriesTest.testHashCode()","org.jfree.data.xy.XYSeries.hashCode()"
"org.jfree.data.xy.TableXYDatasetTest.testPrune()","org.jfree.data.xy.DefaultTableXYDataset.prune()"
"org.jfree.data.xy.TableXYDatasetTest.testRemoveAllValuesForX()","org.jfree.data.xy.DefaultTableXYDataset.removeAllValuesForX(java.lang.Number)"
"org.jfree.chart.renderer.category.BarRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.chart.renderer.category.ScatterRendererTest.testEquals()","org.jfree.chart.renderer.category.ScatterRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.StandardXYItemRendererTest.testEquals()","org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.LineAndShapeRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.chart.renderer.xy.XYLineAndShapeRendererTest.testEquals()","org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.VectorRendererTest.testEquals()","org.jfree.chart.renderer.xy.VectorRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.DefaultPolarItemRendererTest.testEquals()","org.jfree.chart.renderer.DefaultPolarItemRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.IntervalBarRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.category.IntervalBarRenderer.findRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.chart.plot.SpiderWebPlotTest.testGetLegendItems()","org.jfree.chart.LegendItemCollection.get(int)"
"org.jfree.chart.plot.SpiderWebPlotTest.testGetLegendItems()","org.jfree.chart.plot.SpiderWebPlot.getLegendItems()"
"org.jfree.chart.renderer.category.LineAndShapeRendererTest.testEquals()","org.jfree.chart.renderer.category.LineAndShapeRenderer.equals(java.lang.Object)"
"org.jfree.data.gantt.TaskTest.testGetSubTaskCount()","org.jfree.data.gantt.Task.getSubtaskCount()"
"org.jfree.chart.axis.AxisSpaceTest.testEquals()","org.jfree.chart.axis.AxisSpace.equals(java.lang.Object)"
"org.jfree.chart.axis.AxisSpaceTest.testHashCode()","org.jfree.chart.axis.AxisSpace.hashCode()"
"org.jfree.data.xy.XYSeriesTest.testUpdate2()","org.jfree.data.xy.XYSeries.update(java.lang.Number, java.lang.Number)"
"org.jfree.data.xy.XYSeriesTest.testUpdate()","org.jfree.data.xy.XYSeries.update(java.lang.Number, java.lang.Number)"
"org.jfree.data.xy.XYSeriesTest.testUpdateXY()","org.jfree.data.xy.XYSeries.update(java.lang.Number, java.lang.Number)"
"org.jfree.chart.axis.DateTickUnitTest.testHashCode()","org.jfree.chart.axis.DateTickUnit.hashCode()"
"org.jfree.chart.axis.DateAxisTest.testJava2DToValue()","org.jfree.chart.axis.DateAxis.java2DToValue(double, java.awt.geom.Rectangle2D, org.jfree.ui.RectangleEdge)"
"org.jfree.chart.axis.DateTickUnitTest.testEquals()","org.jfree.chart.axis.DateTickUnit.equals(java.lang.Object)"
"org.jfree.chart.axis.DateAxisTest.testHashCode()","org.jfree.chart.axis.DateAxis.hashCode()"
"org.jfree.chart.renderer.category.WaterfallBarRendererTest.testEquals()","org.jfree.chart.renderer.category.WaterfallBarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.WaterfallBarRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.category.WaterfallBarRenderer.findRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.chart.renderer.category.WaterfallBarRendererTest.testHashcode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.chart.renderer.category.GroupedStackedBarRendererTest.testEquals()","org.jfree.chart.renderer.category.GroupedStackedBarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.GroupedStackedBarRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.category.GroupedStackedBarRenderer.findRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.data.xy.DefaultTableXYDatasetTest.testGetSeries()","org.jfree.data.xy.DefaultTableXYDataset.getSeries(int)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindStackedRangeBoundsForTableXYDataset1()","org.jfree.data.general.DatasetUtilities.findStackedRangeBounds(org.jfree.data.xy.TableXYDataset)"
"org.jfree.data.time.TimePeriodValuesTest.getMaxEndIndex()","org.jfree.data.time.TimePeriodValues.getMaxEndIndex()"
"org.jfree.data.time.TimePeriodValuesCollectionTest.testGetDomainBoundsWithoutInterval()","org.jfree.data.time.TimePeriodValuesCollection.getDomainBounds(boolean)"
"org.jfree.data.time.TimePeriodValuesCollectionTest.testGetDomainBoundsWithInterval()","org.jfree.data.time.TimePeriodValuesCollection.getDomainBounds(boolean)"
"org.jfree.data.KeyToGroupMapTest.testGetGroup()","org.jfree.data.KeyToGroupMap.getGroup(java.lang.Comparable)"
"org.jfree.data.KeyToGroupMapTest.testEquals()","org.jfree.data.KeyToGroupMap.equals(java.lang.Object)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindStackedRangeBounds_CategoryDataset3()","org.jfree.data.general.DatasetUtilities.findStackedRangeBounds(org.jfree.data.category.CategoryDataset, org.jfree.data.KeyToGroupMap)"
"org.jfree.data.KeyToGroupMapTest.testGetGroupIndex()","org.jfree.data.KeyToGroupMap.getGroupIndex(java.lang.Comparable)"
"org.jfree.data.KeyToGroupMapTest.testMapKeyToGroup()","org.jfree.data.KeyToGroupMap.mapKeyToGroup(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.chart.plot.CrosshairTest.testHashCode()","org.jfree.chart.plot.Crosshair.hashCode()"
"org.jfree.chart.axis.CategoryTickTest.testEquals()","org.jfree.chart.axis.CategoryTick.equals(java.lang.Object)"
"org.jfree.chart.axis.CategoryTickTest.testHashCode()","org.jfree.chart.axis.CategoryTick.hashCode()"
"org.jfree.chart.renderer.LookupPaintScaleTest.testEquals()","org.jfree.chart.renderer.LookupPaintScale.equals(java.lang.Object)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetSeries()","org.jfree.data.gantt.TaskSeriesCollection.getSeries(int)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetSeries()","org.jfree.data.gantt.TaskSeriesCollection.getSeries(java.lang.Comparable)"
"org.jfree.chart.LineChartTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.CategoryToolTipGenerator)"
"org.jfree.chart.AreaChartTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.CategoryToolTipGenerator)"
"org.jfree.chart.BarChartTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.CategoryToolTipGenerator)"
"org.jfree.chart.BarChart3DTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.CategoryToolTipGenerator)"
"org.jfree.chart.renderer.xy.XYBarRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.xy.XYBarRenderer.findRangeBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.chart.renderer.xy.ClusteredXYBarRendererTest.testFindDomainBounds()","org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.chart.LineChart3DTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.CategoryToolTipGenerator)"
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.chart.renderer.xy.AbstractXYItemRendererTest.testFindDomainBounds()","org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.chart.renderer.xy.XYShapeRendererTest.testEquals()","org.jfree.chart.renderer.xy.XYShapeRenderer.equals(java.lang.Object)"
"org.jfree.data.xy.VectorSeriesCollectionTest.testEquals()","org.jfree.data.xy.VectorSeriesCollection.equals(java.lang.Object)"
"org.jfree.data.xy.VectorDataItemTest.testEquals()","org.jfree.data.ComparableObjectItem.equals(java.lang.Object)"
"org.jfree.data.xy.VectorSeriesTest.testEquals()","org.jfree.data.ComparableObjectSeries.equals(java.lang.Object)"
"org.jfree.data.xy.VectorDataItemTest.testHashcode()","org.jfree.data.ComparableObjectItem.hashCode()"
"org.jfree.data.xy.VectorTest.testHashcode()","org.jfree.data.xy.Vector.hashCode()"
"org.jfree.data.xy.VectorTest.testEquals()","org.jfree.data.xy.Vector.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.VectorRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.data.xy.XYSeriesTest.testGetMinX()","org.jfree.data.xy.XYSeries.getMinX()"
"org.jfree.data.xy.XYSeriesTest.testRemove2()","org.jfree.data.xy.XYSeries.remove(int)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindMinimumRangeValue()","org.jfree.data.general.DatasetUtilities.findMinimumRangeValue(org.jfree.data.category.CategoryDataset)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindMinimumRangeValue()","org.jfree.data.general.DatasetUtilities.findMinimumRangeValue(org.jfree.data.xy.XYDataset)"
"org.jfree.data.xy.XYSeriesCollectionTest.testGetRangeUpperBound()","org.jfree.data.xy.XYSeriesCollection.getRangeUpperBound(boolean)"
"org.jfree.data.xy.XYSeriesTest.testGetMaxY2()","org.jfree.data.xy.XYSeries.getMaxY()"
"org.jfree.data.xy.XYSeriesTest.testIndexOf()","org.jfree.data.xy.XYSeries.indexOf(java.lang.Number)"
"org.jfree.data.xy.XYSeriesTest.testIndexOf3()","org.jfree.data.xy.XYSeries.indexOf(java.lang.Number)"
"org.jfree.data.xy.XYSeriesCollectionTest.testGetRangeLowerBound()","org.jfree.data.xy.XYSeriesCollection.getRangeLowerBound(boolean)"
"org.jfree.data.xy.XYSeriesTest.testUpdateByIndex3()","org.jfree.data.xy.XYSeries.updateByIndex(int, java.lang.Number)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindMaximumRangeValue()","org.jfree.data.general.DatasetUtilities.findMaximumRangeValue(org.jfree.data.category.CategoryDataset)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindMaximumRangeValue()","org.jfree.data.general.DatasetUtilities.findMaximumRangeValue(org.jfree.data.xy.XYDataset)"
"org.jfree.data.xy.XYSeriesTest.testSetMaximumItemCount2()","org.jfree.data.xy.XYSeries.setMaximumItemCount(int)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindMaximumDomainValue()","org.jfree.data.general.DatasetUtilities.findMaximumDomainValue(org.jfree.data.xy.XYDataset)"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateRangeBounds2()","org.jfree.data.general.DatasetUtilities.iterateRangeBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.data.xy.XYSeriesTest.testAddOrUpdate()","org.jfree.data.xy.XYSeries.addOrUpdate(java.lang.Number, java.lang.Number)"
"org.jfree.data.xy.XYSeriesCollectionTest.testGetDomainBounds()","org.jfree.data.xy.XYSeriesCollection.getDomainBounds(boolean)"
"org.jfree.data.xy.XYSeriesTest.testRemove()","org.jfree.data.xy.XYSeries.remove(int)"
"org.jfree.data.xy.XYSeriesTest.testRemove()","org.jfree.data.xy.XYSeries.remove(java.lang.Number)"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateRangeBounds3()","org.jfree.data.general.DatasetUtilities.iterateRangeBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateToFindRangeBounds2_XYDataset()","org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds(org.jfree.data.xy.XYDataset, java.util.List, org.jfree.data.Range, boolean)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindMinimumDomainValue()","org.jfree.data.general.DatasetUtilities.findMinimumDomainValue(org.jfree.data.xy.XYDataset)"
"org.jfree.data.xy.XYSeriesTest.testAdditionOfDuplicateXValues()","org.jfree.data.xy.XYSeries.add(double, double)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindRangeBounds()","org.jfree.data.general.DatasetUtilities.findRangeBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.data.xy.XYSeriesTest.testGetMaxX()","org.jfree.data.xy.XYSeries.getMaxX()"
"org.jfree.data.xy.XYSeriesTest.testGetMaxY()","org.jfree.data.xy.XYSeries.getMaxY()"
"org.jfree.data.xy.XYSeriesTest.testGetMinY()","org.jfree.data.xy.XYSeries.getMinY()"
"org.jfree.data.xy.XYSeriesTest.testUpdateByIndex()","org.jfree.data.xy.XYSeries.updateByIndex(int, java.lang.Number)"
"org.jfree.data.xy.XYSeriesCollectionTest.testGetRangeBounds()","org.jfree.data.xy.XYSeriesCollection.getRangeBounds(boolean)"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateDomainBounds()","org.jfree.data.general.DatasetUtilities.iterateDomainBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.data.xy.XYSeriesTest.testClear()","org.jfree.data.xy.XYSeries.clear()"
"org.jfree.data.xy.XYSeriesTest.testAddOrUpdate2()","org.jfree.data.xy.XYSeries.add(double, double)"
"org.jfree.data.xy.XYSeriesTest.testAddOrUpdate2()","org.jfree.data.xy.XYSeries.addOrUpdate(java.lang.Number, java.lang.Number)"
"org.jfree.data.xy.XYSeriesTest.testSetMaximumItemCount()","org.jfree.data.xy.XYSeries.setMaximumItemCount(int)"
"org.jfree.data.xy.XYSeriesTest.testSetMaximumItemCount4()","org.jfree.data.xy.XYSeries.setMaximumItemCount(int)"
"org.jfree.data.xy.XYSeriesTest.testIndexOf2()","org.jfree.data.xy.XYSeries.indexOf(java.lang.Number)"
"org.jfree.data.xy.XYSeriesTest.testDelete()","org.jfree.data.xy.XYSeries.delete(int, int)"
"org.jfree.data.xy.XYSeriesTest.testToArray()","org.jfree.data.xy.XYSeries.toArray()"
"org.jfree.data.general.DatasetUtilitiesTest.testSampleFunction2D()","org.jfree.data.general.DatasetUtilities.sampleFunction2D(org.jfree.data.function.Function2D, double, double, int, java.lang.Comparable)"
"org.jfree.data.xy.XYSeriesTest.testUpdateByIndex2()","org.jfree.data.xy.XYSeries.updateByIndex(int, java.lang.Number)"
"org.jfree.data.xy.XYSeriesTest.testToArrayExample()","org.jfree.data.xy.XYSeries.toArray()"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateRangeBounds()","org.jfree.data.general.DatasetUtilities.iterateRangeBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindDomainBounds()","org.jfree.data.general.DatasetUtilities.findDomainBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.data.xy.XYSeriesTest.testSetMaximumItemCount3()","org.jfree.data.xy.XYSeries.setMaximumItemCount(int)"
"org.jfree.chart.labels.BubbleXYItemLabelGeneratorTest.testGenerateLabel()","org.jfree.chart.labels.BubbleXYItemLabelGenerator.generateLabel(org.jfree.data.xy.XYDataset, int, int)"
"org.jfree.data.category.CategoryToPieDatasetTest.testGetValue()","org.jfree.data.category.CategoryToPieDataset.getValue(int)"
"org.jfree.data.category.CategoryToPieDatasetTest.testGetValue()","org.jfree.data.category.CategoryToPieDataset.getValue(java.lang.Comparable)"
"org.jfree.data.category.SlidingCategoryDatasetTest.testGetValue()","org.jfree.data.category.SlidingCategoryDataset.getValue(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.category.CategoryToPieDatasetTest.testGetIndex()","org.jfree.data.category.CategoryToPieDataset.getIndex(java.lang.Comparable)"
"org.jfree.data.category.SlidingCategoryDatasetTest.testGetColumnIndex()","org.jfree.data.category.SlidingCategoryDataset.getColumnIndex(java.lang.Comparable)"
"org.jfree.data.time.ohlc.OHLCSeriesTest.testRemove()","org.jfree.data.ComparableObjectSeries.remove(java.lang.Comparable)"
"org.jfree.data.time.ohlc.OHLCSeriesTest.testEquals()","org.jfree.data.ComparableObjectSeries.equals(java.lang.Object)"
"org.jfree.data.time.ohlc.OHLCSeriesTest.testRemove_int()","org.jfree.data.time.ohlc.OHLCSeries.remove(int)"
"org.jfree.chart.annotations.XYShapeAnnotationTest.testHashCode()","org.jfree.chart.annotations.XYShapeAnnotation.hashCode()"
"org.jfree.chart.annotations.XYShapeAnnotationTest.testEquals()","org.jfree.chart.annotations.XYShapeAnnotation.equals(java.lang.Object)"
"org.jfree.data.time.QuarterTest.testParseQuarter()","org.jfree.data.time.Quarter.parseQuarter(java.lang.String)"
"org.jfree.chart.axis.NumberAxisTest.testTranslateJava2DToValue()","org.jfree.chart.axis.NumberAxis.java2DToValue(double, java.awt.geom.Rectangle2D, org.jfree.ui.RectangleEdge)"
"org.jfree.chart.axis.LogAxisTest.testTranslateJava2DToValue()","org.jfree.chart.axis.LogAxis.java2DToValue(double, java.awt.geom.Rectangle2D, org.jfree.ui.RectangleEdge)"
"org.jfree.chart.plot.ValueMarkerTest.testEquals()","org.jfree.chart.plot.ValueMarker.equals(java.lang.Object)"
"org.jfree.chart.plot.MarkerTest.testGetSetLabelPaint()","org.jfree.chart.plot.Marker.setLabelPaint(java.awt.Paint)"
"org.jfree.chart.renderer.category.LevelRendererTest.testHashcode()","org.jfree.chart.renderer.category.LevelRenderer.hashCode()"
"org.jfree.data.KeyedObjectsTest.testRemoveValue()","org.jfree.data.KeyedObjects.removeValue(int)"
"org.jfree.data.KeyedObjectsTest.testRemoveValue()","org.jfree.data.KeyedObjects.removeValue(java.lang.Comparable)"
"org.jfree.data.KeyedObjectsTest.testRemoveValueInt()","org.jfree.data.KeyedObjects.removeValue(int)"
"org.jfree.chart.renderer.AbstractRendererTest.testSetItemLabelsVisible()","org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible(boolean)"
"org.jfree.chart.renderer.category.StandardBarPainterTest.testEquals()","org.jfree.chart.renderer.category.StandardBarPainter.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.StandardBarPainterTest.testHashcode()","org.jfree.chart.renderer.category.StandardBarPainter.hashCode()"
"org.jfree.chart.StandardChartThemeTest.testEquals()","org.jfree.chart.StandardChartTheme.equals(java.lang.Object)"
"org.jfree.chart.entity.LegendItemEntityTest.testEquals()","org.jfree.chart.entity.LegendItemEntity.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.IntervalBarRendererTest.testEquals()","org.jfree.chart.renderer.category.IntervalBarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.XYLine3DRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.xy.XYDifferenceRendererTest.testEquals()","org.jfree.chart.renderer.xy.XYDifferenceRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.YIntervalRendererTest.testEquals()","org.jfree.chart.renderer.xy.YIntervalRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.XYErrorRendererTest.testFindDomainBounds()","org.jfree.chart.renderer.xy.XYErrorRenderer.findDomainBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.chart.renderer.xy.HighLowRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.xy.HighLowRenderer.findRangeBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.chart.renderer.category.CategoryStepRendererTest.testEquals()","org.jfree.chart.renderer.category.CategoryStepRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.YIntervalRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.xy.XYAreaRenderer2Test.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.xy.CandlestickRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.xy.XYErrorRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.xy.XYErrorRenderer.findRangeBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.chart.renderer.xy.DeviationRendererTest.testEquals()","org.jfree.chart.renderer.xy.DeviationRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.testEquals_ObjectList3()","org.jfree.chart.renderer.category.BarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.XYLine3DRendererTest.testEquals()","org.jfree.chart.renderer.xy.XYLine3DRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.BarRenderer3DTest.testEquals()","org.jfree.chart.renderer.category.BarRenderer3D.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.LineRenderer3DTest.testEquals()","org.jfree.chart.renderer.category.LineRenderer3D.equals(java.lang.Object)"
"org.jfree.chart.renderer.DefaultPolarItemRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.category.ScatterRendererTest.testHashcode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.chart.renderer.category.BarRendererTest.testHashcode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.chart.renderer.xy.DeviationRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.xy.XYLineAndShapeRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.xy.XYBlockRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.chart.renderer.xy.XYErrorRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.category.StackedBarRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.category.StackedBarRenderer.findRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.chart.renderer.xy.XYBlockRendererTest.testFindDomainBounds()","org.jfree.chart.renderer.xy.XYBlockRenderer.findDomainBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.chart.renderer.category.MinMaxCategoryRendererTest.testHashcode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.chart.renderer.AbstractRendererTest.testSetItemLabelPaint()","org.jfree.chart.renderer.AbstractRenderer.setItemLabelPaint(java.awt.Paint)"
"org.jfree.chart.renderer.AbstractRendererTest.testSetPaint()","org.jfree.chart.renderer.AbstractRenderer.setPaint(java.awt.Paint)"
"org.jfree.chart.plot.dial.DialPlotTest.testHashCode()","org.jfree.chart.plot.dial.DialPlot.hashCode()"
"org.jfree.chart.renderer.xy.XYSplineRendererTest.testEquals()","org.jfree.chart.renderer.xy.XYSplineRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.XYAreaRendererTest.testEquals()","org.jfree.chart.renderer.xy.XYAreaRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.LayeredBarRendererTest.testEquals()","org.jfree.chart.renderer.category.BarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.AbstractXYItemRendererTest.testEquals_ObjectList()","org.jfree.chart.renderer.xy.XYBarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.AbstractRendererTest.testSetShape()","org.jfree.chart.renderer.AbstractRenderer.setShape(java.awt.Shape)"
"org.jfree.chart.renderer.category.DefaultCategoryItemRendererTest.testHashcode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.chart.renderer.xy.StandardXYItemRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.xy.XYBlockRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.xy.XYStepAreaRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.AbstractRendererTest.testEquals_ObjectList3()","org.jfree.chart.renderer.category.BarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.XYBlockRendererTest.testEquals()","org.jfree.chart.renderer.xy.XYBlockRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.StatisticalBarRendererTest.testHashcode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.chart.renderer.category.StackedAreaRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.category.StackedAreaRenderer.findRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.testEquals_ObjectList2()","org.jfree.chart.renderer.category.BarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.XYAreaRenderer2Test.testEquals()","org.jfree.chart.renderer.xy.XYAreaRenderer2.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.StackedXYAreaRendererTest.testHashcode()","org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode()"
"org.jfree.chart.renderer.category.MinMaxCategoryRendererTest.testEquals()","org.jfree.chart.renderer.category.MinMaxCategoryRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.StackedBarRenderer3DTest.testEquals()","org.jfree.chart.renderer.category.StackedBarRenderer3D.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.AreaRendererTest.testEquals()","org.jfree.chart.renderer.category.AreaRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testHashcode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.chart.renderer.AbstractRendererTest.testSetNegativeItemLabelPosition()","org.jfree.chart.renderer.AbstractRenderer.setNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)"
"org.jfree.chart.renderer.category.DefaultCategoryItemRendererTest.testEquals()","org.jfree.chart.renderer.category.LineAndShapeRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.ClusteredXYBarRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.xy.XYBubbleRendererTest.testEquals()","org.jfree.chart.renderer.xy.XYBubbleRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRendererTest.testEquals()","org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.testEquals()","org.jfree.chart.renderer.category.BarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testEquals()","org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.WindItemRendererTest.testEquals()","org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.StackedXYBarRendererTest.testEquals()","org.jfree.chart.renderer.xy.StackedXYBarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.StatisticalBarRendererTest.testEquals()","org.jfree.chart.renderer.category.StatisticalBarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.LayeredBarRendererTest.testHashcode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.chart.renderer.xy.XYLineAndShapeRendererTest.testEquals2()","org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.AbstractXYItemRendererTest.testFindRangeBounds()","org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.chart.renderer.category.StackedBarRenderer3DTest.testFindRangeBounds()","org.jfree.chart.renderer.category.StackedBarRenderer3D.findRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.chart.renderer.xy.AbstractXYItemRendererTest.testEquals_ObjectList2()","org.jfree.chart.renderer.xy.XYBarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRendererTest.testHashcode()","org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.hashCode()"
"org.jfree.chart.renderer.xy.XYStepRendererTest.testEquals()","org.jfree.chart.renderer.xy.XYStepRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.AbstractRendererTest.testSetOutlinePaint()","org.jfree.chart.renderer.AbstractRenderer.setOutlinePaint(java.awt.Paint)"
"org.jfree.chart.renderer.xy.HighLowRendererTest.testEquals()","org.jfree.chart.renderer.xy.HighLowRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.AbstractRendererTest.testEquals_ObjectList4()","org.jfree.chart.renderer.category.BarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.BarRenderer3DTest.testHashcode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.chart.renderer.xy.HighLowRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.xy.XYSplineRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.xy.WindItemRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.AbstractRendererTest.testEquals_ObjectList2()","org.jfree.chart.renderer.category.BarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.StackedBarRenderer3DTest.testHashcode()","org.jfree.chart.renderer.category.StackedBarRenderer3D.hashCode()"
"org.jfree.chart.renderer.category.StackedBarRendererTest.testEquals()","org.jfree.chart.renderer.category.StackedBarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.XYBubbleRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.xy.StackedXYBarRendererTest.testHashcode()","org.jfree.chart.renderer.xy.StackedXYBarRenderer.hashCode()"
"org.jfree.chart.renderer.xy.XYDifferenceRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.category.LineRenderer3DTest.testHashcode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.chart.renderer.xy.XYDotRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.category.IntervalBarRendererTest.testHashcode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.chart.renderer.xy.XYAreaRendererTest.testHashcode()","org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode()"
"org.jfree.chart.renderer.AbstractRendererTest.testEquals_ObjectList()","org.jfree.chart.renderer.category.BarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.XYBarRendererTest.testHashcode()","org.jfree.chart.renderer.AbstractRenderer.hashCode()"
"org.jfree.chart.renderer.xy.XYDotRendererTest.testEquals()","org.jfree.chart.renderer.xy.XYDotRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.AbstractRendererTest.testSetItemLabelFont()","org.jfree.chart.renderer.AbstractRenderer.setItemLabelFont(java.awt.Font)"
"org.jfree.chart.renderer.category.StackedAreaRendererTest.testHashcode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.chart.renderer.category.AreaRendererTest.testHashcode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.chart.renderer.category.StackedBarRendererTest.testHashCode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.chart.renderer.category.BarRendererTest.testEquals()","org.jfree.chart.renderer.category.BarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRendererTest.testEquals()","org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.AbstractRendererTest.testSetStroke()","org.jfree.chart.renderer.AbstractRenderer.setStroke(java.awt.Stroke)"
"org.jfree.chart.renderer.AbstractRendererTest.testSetPositiveItemLabelPosition()","org.jfree.chart.renderer.AbstractRenderer.setPositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)"
"org.jfree.chart.renderer.xy.StackedXYAreaRendererTest.testEquals()","org.jfree.chart.renderer.xy.StackedXYAreaRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.StackedAreaRendererTest.testEquals()","org.jfree.chart.renderer.category.StackedAreaRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.testEquals_ObjectList()","org.jfree.chart.renderer.category.BarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.AbstractRendererTest.testEquals2()","org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.AbstractRendererTest.testSetOutlineStroke()","org.jfree.chart.renderer.AbstractRenderer.setOutlineStroke(java.awt.Stroke)"
"org.jfree.chart.renderer.xy.ClusteredXYBarRendererTest.testEquals()","org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.XYStepAreaRendererTest.testEquals()","org.jfree.chart.renderer.xy.XYStepAreaRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.XYErrorRendererTest.testEquals()","org.jfree.chart.renderer.xy.XYErrorRenderer.equals(java.lang.Object)"
"org.jfree.chart.renderer.xy.XYStepRendererTest.testHashcode()","org.jfree.chart.renderer.xy.XYStepRenderer.hashCode()"
"org.jfree.chart.renderer.category.LineAndShapeRendererTest.testHashcode()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()"
"org.jfree.data.time.TimePeriodValuesCollectionTest.testEquals()","org.jfree.data.time.TimePeriodValuesCollection.equals(java.lang.Object)"
"org.jfree.data.time.QuarterTest.testGetEnd()","org.jfree.data.time.RegularTimePeriod.getEnd()"
"org.jfree.data.time.QuarterTest.testGetFirstMillisecondWithCalendar()","org.jfree.data.time.Quarter.getFirstMillisecond(java.util.Calendar)"
"org.jfree.data.time.QuarterTest.testHashcode()","org.jfree.data.time.Quarter.hashCode()"
"org.jfree.data.time.QuarterTest.testQ1Y1900Next()","org.jfree.data.time.Quarter.next()"
"org.jfree.data.time.QuarterTest.testGetSerialIndex()","org.jfree.data.time.Quarter.getSerialIndex()"
"org.jfree.data.time.QuarterTest.testGetLastMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getLastMillisecond(java.util.TimeZone)"
"org.jfree.data.time.QuarterTest.testQ4Y9999Previous()","org.jfree.data.time.Quarter.previous()"
"org.jfree.data.time.QuarterTest.testEquals()","org.jfree.data.time.Quarter.equals(java.lang.Object)"
"org.jfree.data.time.QuarterTest.testGetFirstMillisecond()","org.jfree.data.time.Quarter.getFirstMillisecond()"
"org.jfree.data.time.QuarterTest.testNext()","org.jfree.data.time.Quarter.next()"
"org.jfree.data.time.QuarterTest.testEqualsSelf()","org.jfree.data.time.Quarter.equals(java.lang.Object)"
"org.jfree.data.time.QuarterTest.testGetLastMillisecondWithCalendar()","org.jfree.data.time.Quarter.getLastMillisecond(java.util.Calendar)"
"org.jfree.data.time.QuarterTest.testGetStart()","org.jfree.data.time.RegularTimePeriod.getStart()"
"org.jfree.data.time.QuarterTest.testGetFirstMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getFirstMillisecond(java.util.TimeZone)"
"org.jfree.data.time.QuarterTest.testGetLastMillisecond()","org.jfree.data.time.Quarter.getLastMillisecond()"
"org.jfree.chart.plot.dial.DialPointerTest.testHashCode()","org.jfree.chart.plot.dial.DialPointer.Pin.hashCode()"
"org.jfree.chart.needle.LongNeedleTest.testEquals()","org.jfree.chart.needle.LongNeedle.equals(java.lang.Object)"
"org.jfree.data.time.WeekTest.testGetFirstMillisecond()","org.jfree.data.time.Week.getFirstMillisecond()"
"org.jfree.data.time.WeekTest.testGetStart()","org.jfree.data.time.RegularTimePeriod.getStart()"
"org.jfree.chart.annotations.XYTextAnnotationTest.testHashCode()","org.jfree.chart.annotations.XYTextAnnotation.hashCode()"
"org.jfree.chart.annotations.XYPointerAnnotationTest.testHashCode()","org.jfree.chart.annotations.XYPointerAnnotation.hashCode()"
"org.jfree.chart.annotations.XYTextAnnotationTest.testEquals()","org.jfree.chart.annotations.XYTextAnnotation.equals(java.lang.Object)"
"org.jfree.chart.annotations.XYPointerAnnotationTest.testEquals()","org.jfree.chart.annotations.XYPointerAnnotation.equals(java.lang.Object)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindDomainBounds_NaN()","org.jfree.data.general.DatasetUtilities.findDomainBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindDomainBounds_NaN()","org.jfree.data.general.DatasetUtilities.findDomainBounds(org.jfree.data.xy.XYDataset, boolean)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindDomainBounds2()","org.jfree.data.general.DatasetUtilities.findDomainBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetStartXValue()","org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue(int, int)"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateDomainBounds_NaN2()","org.jfree.data.general.DatasetUtilities.iterateDomainBounds(org.jfree.data.xy.XYDataset, boolean)"
"org.jfree.chart.util.LogFormatTest.testEquals()","org.jfree.chart.util.LogFormat.equals(java.lang.Object)"
"org.jfree.chart.WaterfallChartTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.CategoryToolTipGenerator)"
"org.jfree.data.RangeTest.testExpand()","org.jfree.data.Range.expand(org.jfree.data.Range, double, double)"
"org.jfree.chart.StackedBarChart3DTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.CategoryToolTipGenerator)"
"org.jfree.chart.StackedAreaChartTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.CategoryToolTipGenerator)"
"org.jfree.chart.axis.ModuloAxisTest.testEquals()","org.jfree.chart.axis.ModuloAxis.equals(java.lang.Object)"
"org.jfree.chart.axis.LogAxisTest.testSetLowerBound()","org.jfree.chart.axis.ValueAxis.setLowerBound(double)"
"org.jfree.chart.axis.ValueAxisTest.testEquals()","org.jfree.chart.axis.NumberAxis.equals(java.lang.Object)"
"org.jfree.chart.StackedBarChartTest.testSetSeriesToolTipGenerator()","org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesToolTipGenerator(int, org.jfree.chart.labels.CategoryToolTipGenerator)"
"org.jfree.chart.axis.NumberAxisTest.testSetLowerBound()","org.jfree.chart.axis.ValueAxis.setLowerBound(double)"
"org.jfree.chart.needle.PlumNeedleTest.testEquals()","org.jfree.chart.needle.PlumNeedle.equals(java.lang.Object)"
"org.jfree.chart.needle.ArrowNeedleTest.testEquals()","org.jfree.chart.needle.ArrowNeedle.equals(java.lang.Object)"
"org.jfree.chart.needle.WindNeedleTest.testEquals()","org.jfree.chart.needle.WindNeedle.equals(java.lang.Object)"
"org.jfree.chart.needle.ShipNeedleTest.testEquals()","org.jfree.chart.needle.ShipNeedle.equals(java.lang.Object)"
"org.jfree.chart.needle.MiddlePinNeedleTest.testEquals()","org.jfree.chart.needle.MiddlePinNeedle.equals(java.lang.Object)"
"org.jfree.chart.needle.PointerNeedleTest.testEquals()","org.jfree.chart.needle.PointerNeedle.equals(java.lang.Object)"
"org.jfree.chart.needle.LineNeedleTest.testEquals()","org.jfree.chart.needle.LineNeedle.equals(java.lang.Object)"
"org.jfree.chart.needle.MeterNeedleTest.testEquals()","org.jfree.chart.needle.LineNeedle.equals(java.lang.Object)"
"org.jfree.chart.needle.PinNeedleTest.testEquals()","org.jfree.chart.needle.PinNeedle.equals(java.lang.Object)"
"org.jfree.data.general.DatasetUtilitiesTest.testIsEmptyOrNullXYDataset()","org.jfree.data.general.DatasetUtilities.isEmptyOrNull(org.jfree.data.xy.XYDataset)"
"org.jfree.data.xy.XYSeriesTest.testAddOrUpdate3()","org.jfree.data.xy.XYSeries.addOrUpdate(double, double)"
"org.jfree.data.xy.IntervalXYDelegateTest.testEquals()","org.jfree.data.xy.IntervalXYDelegate.equals(java.lang.Object)"
"org.jfree.data.xy.XYSeriesTest.testAdd()","org.jfree.data.xy.XYSeries.add(double, double)"
"org.jfree.chart.axis.LogAxisTest.testHashCode()","org.jfree.chart.axis.LogAxis.hashCode()"
"org.jfree.chart.axis.NumberTickUnitTest.testHashCode()","org.jfree.chart.axis.NumberTickUnit.hashCode()"
"org.jfree.data.function.LineFunction2DTest.testEquals()","org.jfree.data.function.LineFunction2D.equals(java.lang.Object)"
"org.jfree.chart.urls.StandardPieURLGeneratorTest.testEquals()","org.jfree.chart.urls.StandardPieURLGenerator.equals(java.lang.Object)"
"org.jfree.chart.urls.CustomCategoryURLGeneratorTest.testAddURLSeries()","org.jfree.chart.urls.CustomCategoryURLGenerator.addURLSeries(java.util.List)"
"org.jfree.chart.urls.CustomCategoryURLGeneratorTest.testEquals()","org.jfree.chart.urls.CustomCategoryURLGenerator.equals(java.lang.Object)"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateToFindRangeBounds_BoxAndWhiskerXYDataset()","org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds(org.jfree.data.xy.XYDataset, java.util.List, org.jfree.data.Range, boolean)"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateToFindRangeBounds1_XYDataset()","org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds(org.jfree.data.xy.XYDataset, java.util.List, org.jfree.data.Range, boolean)"
"org.jfree.data.xy.XIntervalSeriesTest.testGetXLowValue()","org.jfree.data.xy.XIntervalSeries.getXLowValue(int)"
"org.jfree.data.DataUtilitiesTest.testCalculateRowTotal2()","org.jfree.data.DataUtilities.calculateRowTotal(org.jfree.data.Values2D, int, int[])"
"org.jfree.chart.plot.DefaultDrawingSupplierTest.testEquals()","org.jfree.chart.plot.DefaultDrawingSupplier.equals(java.lang.Object)"
"org.jfree.chart.plot.CategoryPlotTest.testRemoveDomainMarker()","org.jfree.chart.plot.CategoryPlot.removeDomainMarker(org.jfree.chart.plot.Marker)"
"org.jfree.chart.plot.CategoryPlotTest.testRemoveRangeMarker()","org.jfree.chart.plot.CategoryPlot.removeRangeMarker(org.jfree.chart.plot.Marker)"
"org.jfree.chart.plot.PiePlotTest.testGetBaseSectionPaint()","org.jfree.chart.plot.PiePlot.getBaseSectionPaint()"
"org.jfree.chart.axis.SymbolAxisTest.testEquals()","org.jfree.chart.axis.SymbolAxis.equals(java.lang.Object)"
"org.jfree.chart.axis.NumberAxisTest.testEquals()","org.jfree.chart.axis.NumberAxis.equals(java.lang.Object)"
"org.jfree.data.time.TimePeriodValuesCollectionTest.testGetSeries()","org.jfree.data.time.TimePeriodValuesCollection.getSeries(int)"
"org.jfree.chart.axis.CyclicNumberAxisTest.testEquals()","org.jfree.chart.axis.CyclicNumberAxis.equals(java.lang.Object)"
"org.jfree.chart.imagemap.StandardURLTagFragmentGeneratorTest.testGenerateURLFragment()","org.jfree.chart.imagemap.StandardURLTagFragmentGenerator.generateURLFragment(java.lang.String)"
"org.jfree.data.time.ohlc.OHLCSeriesCollectionTest.testHashcode()","org.jfree.data.time.ohlc.OHLCSeriesCollection.hashCode()"
"org.jfree.data.time.ohlc.OHLCSeriesTest.testAdditionOfDuplicatePeriod()","org.jfree.data.time.ohlc.OHLCSeries.add(org.jfree.data.time.RegularTimePeriod, double, double, double, double)"
"org.jfree.data.time.ohlc.OHLCSeriesTest.testSetMaximumItemCount()","org.jfree.data.ComparableObjectSeries.setMaximumItemCount(int)"
"org.jfree.data.time.ohlc.OHLCSeriesTest.testClear()","org.jfree.data.ComparableObjectSeries.clear()"
"org.jfree.data.time.ohlc.OHLCSeriesTest.testIndexOf()","org.jfree.data.ComparableObjectSeries.indexOf(java.lang.Comparable)"
"org.jfree.data.time.ohlc.OHLCSeriesTest.testSetMaximumItemCount2()","org.jfree.data.ComparableObjectSeries.setMaximumItemCount(int)"
"org.jfree.data.time.ohlc.OHLCSeriesCollectionTest.testEquals()","org.jfree.data.time.ohlc.OHLCSeriesCollection.equals(java.lang.Object)"
"org.jfree.data.time.ohlc.OHLCSeriesTest.testHashcode()","org.jfree.data.ComparableObjectSeries.hashCode()"
"org.jfree.chart.renderer.RendererUtilitiesTest.testFindLiveItemsUpperBound_Descending()","org.jfree.chart.renderer.RendererUtilities.findLiveItemsUpperBound(org.jfree.data.xy.XYDataset, int, double, double)"
"org.jfree.chart.labels.StandardCategoryItemLabelGeneratorTest.testGenerateLabel()","org.jfree.chart.labels.StandardCategoryItemLabelGenerator.generateLabel(org.jfree.data.category.CategoryDataset, int, int)"
"org.jfree.chart.entity.CategoryItemEntityTest.testEquals()","org.jfree.chart.entity.CategoryItemEntity.equals(java.lang.Object)"
"org.jfree.chart.labels.StandardCategorySeriesLabelGeneratorTest.testGenerateLabel()","org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel(org.jfree.data.category.CategoryDataset, int)"
"org.jfree.chart.urls.StandardCategoryURLGeneratorTest.testGenerateURL()","org.jfree.chart.urls.StandardCategoryURLGenerator.generateURL(org.jfree.data.category.CategoryDataset, int, int)"
"org.jfree.data.category.CategoryToPieDatasetTest.testEquals()","org.jfree.data.category.CategoryToPieDataset.equals(java.lang.Object)"
"org.jfree.data.general.DatasetUtilitiesTest.testCalculatePieDatasetTotal()","org.jfree.data.general.DatasetUtilities.calculatePieDatasetTotal(org.jfree.data.general.PieDataset)"
"org.jfree.data.DefaultKeyedValues2DTest.testGetRowKey()","org.jfree.data.DefaultKeyedValues2D.getRowKey(int)"
"org.jfree.chart.plot.CategoryMarkerTest.testGetSetKey()","org.jfree.chart.plot.CategoryMarker.setKey(java.lang.Comparable)"
"org.jfree.chart.plot.MarkerTest.testGetSetStroke()","org.jfree.chart.plot.Marker.setStroke(java.awt.Stroke)"
"org.jfree.chart.plot.MarkerTest.testGetSetLabel()","org.jfree.chart.plot.Marker.setLabel(java.lang.String)"
"org.jfree.chart.plot.MarkerTest.testGetSetAlpha()","org.jfree.chart.plot.Marker.setAlpha(float)"
"org.jfree.chart.axis.SubCategoryAxisTest.testEquals()","org.jfree.chart.axis.SubCategoryAxis.equals(java.lang.Object)"
"org.jfree.chart.plot.CategoryMarkerTest.testEquals()","org.jfree.chart.plot.CategoryMarker.equals(java.lang.Object)"
"org.jfree.chart.plot.MarkerTest.testGetSetPaint()","org.jfree.chart.plot.Marker.setPaint(java.awt.Paint)"
"org.jfree.chart.axis.AxisTest.testEquals()","org.jfree.chart.axis.CategoryAxis.equals(java.lang.Object)"
"org.jfree.chart.plot.MarkerTest.testGetSetLabelTextAnchor()","org.jfree.chart.plot.Marker.setLabelTextAnchor(org.jfree.ui.TextAnchor)"
"org.jfree.chart.plot.MarkerTest.testGetSetLabelOffset()","org.jfree.chart.plot.Marker.setLabelOffset(org.jfree.ui.RectangleInsets)"
"org.jfree.chart.annotations.CategoryLineAnnotationTest.testEquals()","org.jfree.chart.annotations.CategoryLineAnnotation.equals(java.lang.Object)"
"org.jfree.chart.axis.CategoryAxisTest.testEquals()","org.jfree.chart.axis.CategoryAxis.equals(java.lang.Object)"
"org.jfree.chart.plot.ValueMarkerTest.testGetSetValue()","org.jfree.chart.plot.ValueMarker.setValue(double)"
"org.jfree.chart.axis.ColorBarTest.testEquals()","org.jfree.chart.axis.ColorBar.equals(java.lang.Object)"
"org.jfree.chart.axis.LogAxisTest.testEquals()","org.jfree.chart.axis.LogAxis.equals(java.lang.Object)"
"org.jfree.chart.plot.IntervalMarkerTest.testGetSetEndValue()","org.jfree.chart.plot.IntervalMarker.setEndValue(double)"
"org.jfree.chart.plot.IntervalMarkerTest.testEquals()","org.jfree.chart.plot.IntervalMarker.equals(java.lang.Object)"
"org.jfree.chart.plot.MarkerTest.testGetSetLabelFont()","org.jfree.chart.plot.Marker.setLabelFont(java.awt.Font)"
"org.jfree.chart.axis.ExtendedCategoryAxisTest.testEquals()","org.jfree.chart.axis.ExtendedCategoryAxis.equals(java.lang.Object)"
"org.jfree.chart.plot.CategoryMarkerTest.testGetSetDrawAsLine()","org.jfree.chart.plot.CategoryMarker.setDrawAsLine(boolean)"
"org.jfree.chart.axis.ColorBarTest.testHashCode()","org.jfree.chart.axis.ColorBar.hashCode()"
"org.jfree.chart.plot.MarkerTest.testGetSetLabelAnchor()","org.jfree.chart.plot.Marker.setLabelAnchor(org.jfree.ui.RectangleAnchor)"
"org.jfree.chart.plot.MarkerTest.testGetSetLabelOffsetType()","org.jfree.chart.plot.Marker.setLabelOffsetType(org.jfree.ui.LengthAdjustmentType)"
"org.jfree.chart.plot.MarkerTest.testGetSetOutlinePaint()","org.jfree.chart.plot.Marker.setOutlinePaint(java.awt.Paint)"
"org.jfree.chart.plot.MarkerTest.testGetSetOutlineStroke()","org.jfree.chart.plot.Marker.setOutlineStroke(java.awt.Stroke)"
"org.jfree.chart.axis.CyclicNumberAxisTest.testHashCode()","org.jfree.chart.axis.NumberAxis.hashCode()"
"org.jfree.chart.plot.IntervalMarkerTest.testGetSetStartValue()","org.jfree.chart.plot.IntervalMarker.setStartValue(double)"
"org.jfree.data.time.YearTest.testGetStart()","org.jfree.data.time.RegularTimePeriod.getStart()"
"org.jfree.data.time.YearTest.testGetFirstMillisecond()","org.jfree.data.time.Year.getFirstMillisecond()"
"org.jfree.data.time.TimePeriodValuesTest.testAddValue()","org.jfree.data.time.TimePeriodValues.add(org.jfree.data.time.TimePeriod, java.lang.Number)"
"org.jfree.data.xy.XIntervalSeriesTest.testSetMaximumItemCount2()","org.jfree.data.ComparableObjectSeries.setMaximumItemCount(int)"
"org.jfree.data.xy.XIntervalSeriesTest.testSetMaximumItemCount()","org.jfree.data.ComparableObjectSeries.setMaximumItemCount(int)"
"org.jfree.data.xy.XIntervalSeriesTest.testRemove()","org.jfree.data.ComparableObjectSeries.remove(java.lang.Comparable)"
"org.jfree.data.xy.VectorSeriesTest.testIndexOf2()","org.jfree.data.ComparableObjectSeries.indexOf(java.lang.Comparable)"
"org.jfree.data.xy.VectorSeriesTest.testSetMaximumItemCount2()","org.jfree.data.ComparableObjectSeries.setMaximumItemCount(int)"
"org.jfree.data.xy.VectorSeriesTest.testSetMaximumItemCount()","org.jfree.data.ComparableObjectSeries.setMaximumItemCount(int)"
"org.jfree.data.xy.VectorSeriesTest.testIndexOf()","org.jfree.data.ComparableObjectSeries.indexOf(java.lang.Comparable)"
"org.jfree.data.xy.VectorSeriesTest.testAdditionOfDuplicateXValues()","org.jfree.data.xy.VectorSeries.add(double, double, double, double)"
"org.jfree.data.xy.VectorSeriesCollectionTest.testRemoveSeries()","org.jfree.data.xy.VectorSeriesCollection.removeSeries(org.jfree.data.xy.VectorSeries)"
"org.jfree.data.xy.VectorSeriesTest.testRemove()","org.jfree.data.ComparableObjectSeries.remove(java.lang.Comparable)"
"org.jfree.data.xy.VectorSeriesTest.testClear()","org.jfree.data.ComparableObjectSeries.clear()"
"org.jfree.chart.block.GridArrangementTest.testEquals()","org.jfree.chart.block.GridArrangement.equals(java.lang.Object)"
"org.jfree.chart.labels.StandardXYZToolTipGeneratorTest.testEquals()","org.jfree.chart.labels.StandardXYZToolTipGenerator.equals(java.lang.Object)"
"org.jfree.chart.labels.StandardXYZToolTipGeneratorTest.testHashCode()","org.jfree.chart.labels.AbstractXYItemLabelGenerator.hashCode()"
"org.jfree.chart.labels.ItemLabelAnchorTest.testEquals()","org.jfree.chart.labels.ItemLabelAnchor.equals(java.lang.Object)"
"org.jfree.chart.plot.dial.StandardDialRangeTest.testHashCode()","org.jfree.chart.plot.dial.StandardDialRange.hashCode()"
"org.jfree.chart.labels.StandardPieToolTipGeneratorTest.testHashCode()","org.jfree.chart.labels.AbstractPieItemLabelGenerator.hashCode()"
"org.jfree.chart.labels.StandardPieSectionLabelGeneratorTest.testHashCode()","org.jfree.chart.labels.AbstractPieItemLabelGenerator.hashCode()"
"org.jfree.chart.labels.IntervalCategoryItemLabelGeneratorTest.testEquals()","org.jfree.chart.labels.StandardCategoryItemLabelGenerator.equals(java.lang.Object)"
"org.jfree.chart.labels.StandardCategoryItemLabelGeneratorTest.testEquals1481087()","org.jfree.chart.labels.StandardCategoryItemLabelGenerator.equals(java.lang.Object)"
"org.jfree.chart.labels.IntervalCategoryItemLabelGeneratorTest.testHashCode()","org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.hashCode()"
"org.jfree.chart.labels.StandardCategoryToolTipGeneratorTest.testEquals1481087()","org.jfree.chart.labels.StandardCategoryToolTipGenerator.equals(java.lang.Object)"
"org.jfree.chart.labels.StandardCategoryItemLabelGeneratorTest.testEquals()","org.jfree.chart.labels.StandardCategoryItemLabelGenerator.equals(java.lang.Object)"
"org.jfree.data.statistics.SimpleHistogramDatasetTest.testRemoveAllBins()","org.jfree.data.statistics.SimpleHistogramDataset.removeAllBins()"
"org.jfree.data.statistics.SimpleHistogramBinTest.testEquals()","org.jfree.data.statistics.SimpleHistogramBin.equals(java.lang.Object)"
"org.jfree.data.statistics.SimpleHistogramDatasetTest.testClearObservations()","org.jfree.data.statistics.SimpleHistogramDataset.clearObservations()"
"org.jfree.data.xy.XIntervalSeriesTest.testGetXHighValue()","org.jfree.data.xy.XIntervalSeries.getXHighValue(int)"
"org.jfree.data.xy.XIntervalSeriesTest.testClear()","org.jfree.data.ComparableObjectSeries.clear()"
"org.jfree.data.xy.XIntervalSeriesTest.testAdditionOfDuplicateXValues()","org.jfree.data.xy.XIntervalSeries.add(double, double, double, double)"
"org.jfree.data.xy.XIntervalSeriesTest.testEquals()","org.jfree.data.ComparableObjectSeries.equals(java.lang.Object)"
"org.jfree.data.xy.XIntervalSeriesTest.testIndexOf()","org.jfree.data.ComparableObjectSeries.indexOf(java.lang.Comparable)"
"org.jfree.data.xy.XIntervalSeriesTest.testAdd()","org.jfree.data.xy.XIntervalSeries.add(double, double, double, double)"
"org.jfree.data.xy.XIntervalSeriesTest.testIndexOf2()","org.jfree.data.ComparableObjectSeries.indexOf(java.lang.Comparable)"
"org.jfree.data.xy.XIntervalDataItemTest.testEquals()","org.jfree.data.ComparableObjectItem.equals(java.lang.Object)"
"org.jfree.data.xy.YWithXIntervalTest.testEquals()","org.jfree.data.xy.YWithXInterval.equals(java.lang.Object)"
"org.jfree.chart.entity.PieSectionEntityTest.testEquals()","org.jfree.chart.entity.PieSectionEntity.equals(java.lang.Object)"
"org.jfree.data.general.DefaultPieDatasetTest.testClear()","org.jfree.data.general.DefaultPieDataset.clear()"
"org.jfree.chart.entity.StandardEntityCollectionTest.testEquals()","org.jfree.chart.entity.StandardEntityCollection.equals(java.lang.Object)"
"org.jfree.chart.ChartPanelTest.testGetListeners()","org.jfree.chart.ChartPanel.getListeners(java.lang.Class)"
"org.jfree.data.gantt.TaskSeriesTest.testEquals()","org.jfree.data.gantt.TaskSeries.equals(java.lang.Object)"
"org.jfree.data.gantt.TaskSeriesCollectionTest.testRemove()","org.jfree.data.gantt.TaskSeriesCollection.remove(int)"
"org.jfree.chart.urls.TimeSeriesURLGeneratorTest.testEquals()","org.jfree.chart.urls.TimeSeriesURLGenerator.equals(java.lang.Object)"
"org.jfree.chart.urls.CustomXYURLGeneratorTest.testAddURLSeries()","org.jfree.chart.urls.CustomXYURLGenerator.addURLSeries(java.util.List)"
"org.jfree.chart.urls.CustomXYURLGeneratorTest.testEquals()","org.jfree.chart.urls.CustomXYURLGenerator.equals(java.lang.Object)"
"org.jfree.data.category.SlidingCategoryDatasetTest.testGetColumnCount()","org.jfree.data.category.SlidingCategoryDataset.getColumnCount()"
"org.jfree.data.category.SlidingCategoryDatasetTest.testGetRowCount()","org.jfree.data.category.SlidingCategoryDataset.getRowCount()"
"org.jfree.data.DefaultKeyedValuesTest.testRemoveValue()","org.jfree.data.DefaultKeyedValues.removeValue(java.lang.Comparable)"
"org.jfree.data.DefaultKeyedValues2DTest.testRemoveColumnByKey()","org.jfree.data.DefaultKeyedValues2D.removeColumn(java.lang.Comparable)"
"org.jfree.data.DefaultKeyedValuesTest.testGetIndex2()","org.jfree.data.DefaultKeyedValues.getIndex(java.lang.Comparable)"
"org.jfree.data.time.TimePeriodAnchorTest.testEquals()","org.jfree.data.time.TimePeriodAnchor.equals(java.lang.Object)"
"org.jfree.chart.entity.XYItemEntityTest.testEquals()","org.jfree.chart.entity.XYItemEntity.equals(java.lang.Object)"
"org.jfree.data.time.TimeSeriesTest.testSetKey()","org.jfree.data.general.Series.setKey(java.lang.Comparable)"
"org.jfree.chart.plot.dial.ArcDialFrameTest.testHashCode()","org.jfree.chart.plot.dial.ArcDialFrame.hashCode()"
"org.jfree.chart.renderer.xy.GradientXYBarPainterTest.testHashcode()","org.jfree.chart.renderer.xy.GradientXYBarPainter.hashCode()"
"org.jfree.chart.renderer.xy.GradientXYBarPainterTest.testEquals()","org.jfree.chart.renderer.xy.GradientXYBarPainter.equals(java.lang.Object)"
"org.jfree.chart.axis.TickUnitsTest.testEquals()","org.jfree.chart.axis.TickUnits.equals(java.lang.Object)"
"org.jfree.chart.axis.NumberTickUnitTest.testEquals()","org.jfree.chart.axis.NumberTickUnit.equals(java.lang.Object)"
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testSetStartValue()","org.jfree.data.category.DefaultIntervalCategoryDataset.setStartValue(int, java.lang.Comparable, java.lang.Number)"
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetColumnIndex()","org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnIndex(java.lang.Comparable)"
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetValue()","org.jfree.data.category.DefaultIntervalCategoryDataset.getValue(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testSetEndValue()","org.jfree.data.category.DefaultIntervalCategoryDataset.setEndValue(int, java.lang.Comparable, java.lang.Number)"
"org.jfree.data.time.TimeSeriesTest.testEquals2()","org.jfree.data.time.TimeSeries.equals(java.lang.Object)"
"org.jfree.data.time.TimeSeriesTest.testEquals3()","org.jfree.data.time.TimeSeries.equals(java.lang.Object)"
"org.jfree.chart.axis.NumberAxisTest.testHashCode()","org.jfree.chart.axis.NumberAxis.hashCode()"
"org.jfree.chart.axis.ModuloAxisTest.testHashCode()","org.jfree.chart.axis.NumberAxis.hashCode()"
"org.jfree.chart.labels.StandardXYSeriesLabelGeneratorTest.testGenerateLabel()","org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel(org.jfree.data.xy.XYDataset, int)"
"org.jfree.data.xy.XYSeriesCollectionTest.testAddSeries()","org.jfree.data.xy.XYSeriesCollection.addSeries(org.jfree.data.xy.XYSeries)"
"org.jfree.data.xy.XYSeriesCollectionTest.testGetSeries()","org.jfree.data.xy.XYSeriesCollection.getSeries(int)"
"org.jfree.data.xy.XYSeriesCollectionTest.testGetSeriesByKey()","org.jfree.data.xy.XYSeriesCollection.getSeries(java.lang.Comparable)"
"org.jfree.data.xy.XYIntervalDataItemTest.testEquals()","org.jfree.data.ComparableObjectItem.equals(java.lang.Object)"
"org.jfree.data.xy.XYIntervalSeriesTest.testSetMaximumItemCount()","org.jfree.data.ComparableObjectSeries.setMaximumItemCount(int)"
"org.jfree.data.xy.XYIntervalSeriesTest.testIndexOf2()","org.jfree.data.ComparableObjectSeries.indexOf(java.lang.Comparable)"
"org.jfree.data.xy.XYIntervalSeriesTest.testSetMaximumItemCount2()","org.jfree.data.ComparableObjectSeries.setMaximumItemCount(int)"
"org.jfree.data.xy.XYIntervalSeriesTest.testAdd()","org.jfree.data.xy.XYIntervalSeries.add(double, double, double, double, double, double)"
"org.jfree.data.xy.XYIntervalSeriesTest.testIndexOf()","org.jfree.data.ComparableObjectSeries.indexOf(java.lang.Comparable)"
"org.jfree.data.xy.XYIntervalSeriesCollectionTest.testEquals()","org.jfree.data.xy.XYIntervalSeriesCollection.equals(java.lang.Object)"
"org.jfree.data.xy.XYIntervalSeriesTest.testRemove()","org.jfree.data.ComparableObjectSeries.remove(java.lang.Comparable)"
"org.jfree.data.xy.XYIntervalSeriesTest.testAdditionOfDuplicateXValues()","org.jfree.data.xy.XYIntervalSeries.add(double, double, double, double, double, double)"
"org.jfree.data.xy.XYIntervalSeriesTest.testEquals()","org.jfree.data.ComparableObjectSeries.equals(java.lang.Object)"
"org.jfree.data.xy.XYIntervalSeriesTest.testClear()","org.jfree.data.ComparableObjectSeries.clear()"
"org.jfree.chart.labels.StandardPieToolTipGeneratorTest.testEquals()","org.jfree.chart.labels.AbstractPieItemLabelGenerator.equals(java.lang.Object)"
"org.jfree.data.time.TimePeriodValuesTest.getMinEndIndex()","org.jfree.data.time.TimePeriodValues.getMinEndIndex()"
"org.jfree.data.general.DatasetUtilitiesTest.testFindRangeBounds_CategoryDataset()","org.jfree.data.general.DatasetUtilities.findRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.data.xy.YIntervalSeriesTest.testEquals()","org.jfree.data.ComparableObjectSeries.equals(java.lang.Object)"
"org.jfree.data.xy.YIntervalDataItemTest.testEquals()","org.jfree.data.ComparableObjectItem.equals(java.lang.Object)"
"org.jfree.data.xy.YIntervalTest.testEquals()","org.jfree.data.xy.YInterval.equals(java.lang.Object)"
"org.jfree.data.xy.YIntervalSeriesCollectionTest.testEquals()","org.jfree.data.xy.YIntervalSeriesCollection.equals(java.lang.Object)"
"org.jfree.chart.annotations.CategoryLineAnnotationTest.testHashcode()","org.jfree.chart.annotations.CategoryLineAnnotation.hashCode()"
"org.jfree.data.KeyedObjectsTest.testGetObject()","org.jfree.data.KeyedObjects.getObject(int)"
"org.jfree.data.KeyedObjectsTest.testGetIndex()","org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable)"
"org.jfree.data.KeyedObjectsTest.testSetObject()","org.jfree.data.KeyedObjects.setObject(java.lang.Comparable, java.lang.Object)"
"org.jfree.data.KeyedObjectsTest.testGetKey()","org.jfree.data.KeyedObjects.getKey(int)"
"org.jfree.data.statistics.HistogramDatasetTest.testAddSeries()","org.jfree.data.statistics.HistogramDataset.addSeries(java.lang.Comparable, double[], int, double, double)"
"org.jfree.data.time.YearTest.testParseYear()","org.jfree.data.time.Year.parseYear(java.lang.String)"
"org.jfree.data.time.MonthTest.testParseMonth()","org.jfree.data.time.Month.parseMonth(java.lang.String)"
"org.jfree.chart.axis.CategoryLabelPositionTest.testEquals()","org.jfree.chart.axis.CategoryLabelPosition.equals(java.lang.Object)"
"org.jfree.chart.axis.CategoryLabelPositionTest.testHashCode()","org.jfree.chart.axis.CategoryLabelPosition.hashCode()"
"org.jfree.data.general.DatasetUtilitiesTest.testFindMinimumStackedRangeValue()","org.jfree.data.general.DatasetUtilities.findMinimumStackedRangeValue(org.jfree.data.category.CategoryDataset)"
"org.jfree.data.category.SlidingCategoryDatasetTest.testGetColumnKeys()","org.jfree.data.category.SlidingCategoryDataset.getColumnKeys()"
"org.jfree.data.category.DefaultCategoryDatasetTest.testGetValue()","org.jfree.data.category.DefaultCategoryDataset.getValue(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateRangeBounds_CategoryDataset()","org.jfree.data.general.DatasetUtilities.iterateRangeBounds(org.jfree.data.category.CategoryDataset, boolean)"
"org.jfree.data.category.SlidingCategoryDatasetTest.testGetRowIndex()","org.jfree.data.category.SlidingCategoryDataset.getRowIndex(java.lang.Comparable)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindMaximumStackedRangeValue()","org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue(org.jfree.data.category.CategoryDataset)"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateRangeBounds2_CategoryDataset()","org.jfree.data.general.DatasetUtilities.iterateRangeBounds(org.jfree.data.category.CategoryDataset, boolean)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindStackedRangeBounds_CategoryDataset2()","org.jfree.data.general.DatasetUtilities.findStackedRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindStackedRangeBounds_CategoryDataset2()","org.jfree.data.general.DatasetUtilities.findStackedRangeBounds(org.jfree.data.category.CategoryDataset, double)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindStackedRangeBounds_CategoryDataset1()","org.jfree.data.general.DatasetUtilities.findStackedRangeBounds(org.jfree.data.category.CategoryDataset)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindMaximumStackedRangeValue2()","org.jfree.data.general.DatasetUtilities.findMaximumStackedRangeValue(org.jfree.data.category.CategoryDataset)"
"org.jfree.data.category.CategoryToPieDatasetTest.testGetKey()","org.jfree.data.category.CategoryToPieDataset.getKey(int)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindMinimumStackedRangeValue2()","org.jfree.data.general.DatasetUtilities.findMinimumStackedRangeValue(org.jfree.data.category.CategoryDataset)"
"org.jfree.chart.labels.IntervalCategoryToolTipGeneratorTest.testHashCode()","org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.hashCode()"
"org.jfree.chart.labels.IntervalCategoryToolTipGeneratorTest.testEquals()","org.jfree.chart.labels.IntervalCategoryToolTipGenerator.equals(java.lang.Object)"
"org.jfree.chart.labels.IntervalCategoryToolTipGeneratorTest.testEquals2()","org.jfree.chart.labels.IntervalCategoryToolTipGenerator.equals(java.lang.Object)"
"org.jfree.data.statistics.DefaultMultiValueCategoryDatasetTest.testGetValue2()","org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getValue(int, int)"
"org.jfree.data.general.DatasetUtilitiesTest.testFindDomainBounds3()","org.jfree.data.general.DatasetUtilities.findDomainBounds(org.jfree.data.xy.XYDataset, boolean)"
"org.jfree.data.xy.YIntervalSeriesCollectionTest.testRemoveSeries()","org.jfree.data.xy.YIntervalSeriesCollection.removeSeries(int)"
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetStartYValue()","org.jfree.data.xy.DefaultIntervalXYDataset.getStartYValue(int, int)"
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetSeriesKey()","org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey(int)"
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetEndXValue()","org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue(int, int)"
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testSetSeriesKeys()","org.jfree.data.category.DefaultIntervalCategoryDataset.setSeriesKeys(java.lang.Comparable[])"
"org.jfree.data.time.ohlc.OHLCSeriesCollectionTest.testRemoveSeries_int()","org.jfree.data.time.ohlc.OHLCSeriesCollection.removeSeries(int)"
"org.jfree.chart.renderer.RendererUtilitiesTest.testFindLiveItemsUpperBound_Unordered()","org.jfree.chart.renderer.RendererUtilities.findLiveItemsUpperBound(org.jfree.data.xy.XYDataset, int, double, double)"
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetRowIndex()","org.jfree.data.category.DefaultIntervalCategoryDataset.getRowIndex(java.lang.Comparable)"
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testEquals()","org.jfree.data.statistics.DefaultStatisticalCategoryDataset.equals(java.lang.Object)"
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetColumnKeys()","org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys()"
"org.jfree.data.xy.DefaultXYDatasetTest.testGetSeriesKey()","org.jfree.data.xy.DefaultXYDataset.getSeriesKey(int)"
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetSeriesCount()","org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesCount()"
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetSeriesCount()","org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount()"
"org.jfree.data.xy.MatrixSeriesCollectionTest.testEquals()","org.jfree.data.xy.MatrixSeriesCollection.equals(java.lang.Object)"
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetCategoryIndex()","org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex(java.lang.Comparable)"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateDomainBounds_NaN()","org.jfree.data.general.DatasetUtilities.iterateDomainBounds(org.jfree.data.xy.XYDataset)"
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetXValue()","org.jfree.data.xy.DefaultIntervalXYDataset.getXValue(int, int)"
"org.jfree.data.xy.DefaultOHLCDatasetTest.testEquals()","org.jfree.data.xy.DefaultOHLCDataset.equals(java.lang.Object)"
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetSeriesIndex()","org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex(java.lang.Comparable)"
"org.jfree.data.general.DefaultHeatMapDatasetTest.testEquals()","org.jfree.data.general.DefaultHeatMapDataset.equals(java.lang.Object)"
"org.jfree.data.statistics.SimpleHistogramDatasetTest.testEquals()","org.jfree.data.statistics.SimpleHistogramDataset.equals(java.lang.Object)"
"org.jfree.data.xy.DefaultXYDatasetTest.testEquals()","org.jfree.data.xy.DefaultXYDataset.equals(java.lang.Object)"
"org.jfree.data.xy.XYIntervalSeriesCollectionTest.testRemoveSeries()","org.jfree.data.xy.XYIntervalSeriesCollection.removeSeries(int)"
"org.jfree.chart.renderer.RendererUtilitiesTest.testFindLiveItemsLowerBound_Ascending()","org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound(org.jfree.data.xy.XYDataset, int, double, double)"
"org.jfree.data.xy.DefaultXYDatasetTest.testAddSeries()","org.jfree.data.xy.DefaultXYDataset.addSeries(java.lang.Comparable, double[][])"
"org.jfree.chart.renderer.RendererUtilitiesTest.testFindLiveItemsLowerBound_Unordered()","org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound(org.jfree.data.xy.XYDataset, int, double, double)"
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testIndexOf()","org.jfree.data.general.AbstractSeriesDataset.indexOf(java.lang.Comparable)"
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetColumnCount()","org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount()"
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetItemCount()","org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount(int)"
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDatasetTest.testEquals()","org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.equals(java.lang.Object)"
"org.jfree.data.xy.DefaultHighLowDatasetTest.testEquals()","org.jfree.data.xy.DefaultHighLowDataset.equals(java.lang.Object)"
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testSetCategoryKeys()","org.jfree.data.category.DefaultIntervalCategoryDataset.setCategoryKeys(java.lang.Comparable[])"
"org.jfree.data.xy.XYBarDatasetTest.testEquals()","org.jfree.data.xy.XYBarDataset.equals(java.lang.Object)"
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetEndYValue()","org.jfree.data.xy.DefaultIntervalXYDataset.getEndYValue(int, int)"
"org.jfree.data.xy.DefaultXYZDatasetTest.testEquals()","org.jfree.data.xy.DefaultXYZDataset.equals(java.lang.Object)"
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetYValue()","org.jfree.data.xy.DefaultIntervalXYDataset.getYValue(int, int)"
"org.jfree.data.xy.DefaultXYDatasetTest.testIndexOf()","org.jfree.data.xy.DefaultXYDataset.indexOf(java.lang.Comparable)"
"org.jfree.data.general.DatasetUtilitiesTest.testIterateRangeBounds3_CategoryDataset()","org.jfree.data.general.DatasetUtilities.iterateRangeBounds(org.jfree.data.category.CategoryDataset, boolean)"
"org.jfree.data.time.ohlc.OHLCSeriesCollectionTest.testRemoveAllSeries()","org.jfree.data.time.ohlc.OHLCSeriesCollection.removeAllSeries()"
"org.jfree.data.general.DatasetUtilitiesTest.testFindStackedRangeBoundsForTableXYDataset2()","org.jfree.data.general.DatasetUtilities.findStackedRangeBounds(org.jfree.data.xy.TableXYDataset)"
"org.jfree.data.time.ohlc.OHLCSeriesCollectionTest.testRemoveSeries()","org.jfree.data.time.ohlc.OHLCSeriesCollection.removeSeries(org.jfree.data.time.ohlc.OHLCSeries)"
"org.jfree.chart.renderer.RendererUtilitiesTest.testFindLiveItemsUpperBound_Ascending()","org.jfree.chart.renderer.RendererUtilities.findLiveItemsUpperBound(org.jfree.data.xy.XYDataset, int, double, double)"
"org.jfree.chart.urls.TimeSeriesURLGeneratorTest.testGenerateURL()","org.jfree.chart.urls.TimeSeriesURLGenerator.generateURL(org.jfree.data.xy.XYDataset, int, int)"
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetCategoryCount()","org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryCount()"
"org.jfree.chart.renderer.RendererUtilitiesTest.testFindLiveItemsLowerBound_Descending()","org.jfree.chart.renderer.RendererUtilities.findLiveItemsLowerBound(org.jfree.data.xy.XYDataset, int, double, double)"
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testAddSeries()","org.jfree.data.xy.DefaultIntervalXYDataset.addSeries(java.lang.Comparable, double[][])"
"org.jfree.data.xy.DefaultXYZDatasetTest.testIndexOf()","org.jfree.data.xy.DefaultXYZDataset.indexOf(java.lang.Comparable)"
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testEquals()","org.jfree.data.xy.DefaultIntervalXYDataset.equals(java.lang.Object)"
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetRowKeys()","org.jfree.data.category.DefaultIntervalCategoryDataset.getRowKeys()"
"org.jfree.chart.title.ImageTitleTest.testArrangeNN()","org.jfree.chart.block.AbstractBlock.arrange(java.awt.Graphics2D)"
"org.jfree.chart.labels.BubbleXYItemLabelGeneratorTest.testHashCode()","org.jfree.chart.labels.BubbleXYItemLabelGenerator.hashCode()"
"org.jfree.chart.block.RectangleConstraintTest.testCalculateConstrainedSize()","org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize(org.jfree.ui.Size2D)"
"org.jfree.chart.plot.dial.DialCapTest.testHashCode()","org.jfree.chart.plot.dial.DialCap.hashCode()"
"org.jfree.data.xy.MatrixSeriesTest.testGetItemRow()","org.jfree.data.xy.MatrixSeries.getItemRow(int)"
"org.jfree.data.xy.MatrixSeriesTest.testEquals()","org.jfree.data.xy.MatrixSeries.equals(java.lang.Object)"
"org.jfree.chart.PaintMapTest.testPut()","org.jfree.chart.PaintMap.put(java.lang.Comparable, java.awt.Paint)"
"org.jfree.chart.PaintMapTest.testGetPaint()","org.jfree.chart.PaintMap.getPaint(java.lang.Comparable)"
"org.jfree.chart.PaintMapTest.testEquals()","org.jfree.chart.PaintMap.equals(java.lang.Object)"
"org.jfree.chart.annotations.XYPolygonAnnotationTest.testEquals()","org.jfree.chart.annotations.XYPolygonAnnotation.equals(java.lang.Object)"
"org.jfree.chart.annotations.XYPolygonAnnotationTest.testHashCode()","org.jfree.chart.annotations.XYPolygonAnnotation.hashCode()"
"org.jfree.data.RangeTest.testIsNaNRange()","org.jfree.data.Range.isNaNRange()"
"org.jfree.data.RangeTest.testCombineIgnoringNaN()","org.jfree.data.Range.combineIgnoringNaN(org.jfree.data.Range, org.jfree.data.Range)"
"org.jfree.chart.labels.StandardXYItemLabelGeneratorTest.testHashCode()","org.jfree.chart.labels.AbstractXYItemLabelGenerator.hashCode()"
"org.jfree.chart.labels.BoxAndWhiskerXYToolTipGeneratorTest.testHashCode()","org.jfree.chart.labels.AbstractXYItemLabelGenerator.hashCode()"
"org.jfree.chart.labels.StandardXYToolTipGeneratorTest.testEquals()","org.jfree.chart.labels.StandardXYToolTipGenerator.equals(java.lang.Object)"
"org.jfree.chart.labels.StandardXYToolTipGeneratorTest.testHashCode()","org.jfree.chart.labels.AbstractXYItemLabelGenerator.hashCode()"
"org.jfree.chart.labels.BoxAndWhiskerXYToolTipGeneratorTest.testEquals()","org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator.equals(java.lang.Object)"
"org.jfree.chart.labels.StandardPieSectionLabelGeneratorTest.testEquals()","org.jfree.chart.labels.StandardPieSectionLabelGenerator.equals(java.lang.Object)"
"org.jfree.data.ComparableObjectSeriesTest.testHashCode()","org.jfree.data.ComparableObjectSeries.hashCode()"
"org.jfree.chart.plot.dial.DialTextAnnotationTest.testHashCode()","org.jfree.chart.plot.dial.DialTextAnnotation.hashCode()"
"org.jfree.data.function.PowerFunction2DTest.testEquals()","org.jfree.data.function.PowerFunction2D.equals(java.lang.Object)"
"org.jfree.data.time.MonthTest.testNext()","org.jfree.data.time.Month.next()"
"org.jfree.chart.annotations.XYImageAnnotationTest.testHashCode()","org.jfree.chart.annotations.XYImageAnnotation.hashCode()"
"org.jfree.data.time.TimePeriodValuesTest.testGetMaxStartIndex()","org.jfree.data.time.TimePeriodValues.getMaxStartIndex()"
"org.jfree.data.time.TimePeriodValuesTest.testGetMinMiddleIndex()","org.jfree.data.time.TimePeriodValues.getMinMiddleIndex()"
"org.jfree.data.time.TimePeriodValuesTest.testAdd()","org.jfree.data.time.TimePeriodValues.add(org.jfree.data.time.TimePeriodValue)"
"org.jfree.data.time.TimePeriodValuesTest.testGetMaxMiddleIndex()","org.jfree.data.time.TimePeriodValues.getMaxMiddleIndex()"
"org.jfree.data.time.TimePeriodValuesTest.testGetMinStartIndex()","org.jfree.data.time.TimePeriodValues.getMinStartIndex()"
"org.jfree.chart.axis.PeriodAxisLabelInfoTest.testHashCode()","org.jfree.chart.axis.PeriodAxisLabelInfo.hashCode()"
"org.jfree.data.xy.YIntervalSeriesTest.testIndexOf()","org.jfree.data.ComparableObjectSeries.indexOf(java.lang.Comparable)"
"org.jfree.data.xy.YIntervalSeriesTest.testIndexOf2()","org.jfree.data.ComparableObjectSeries.indexOf(java.lang.Comparable)"
"org.jfree.data.xy.YIntervalSeriesTest.testRemove()","org.jfree.data.ComparableObjectSeries.remove(java.lang.Comparable)"
"org.jfree.data.xy.VectorSeriesTest.testAdd()","org.jfree.data.xy.VectorSeries.add(double, double, double, double)"
"org.jfree.data.xy.YIntervalSeriesTest.testClear()","org.jfree.data.ComparableObjectSeries.clear()"
"org.jfree.data.xy.YIntervalSeriesTest.testAdditionOfDuplicateXValues()","org.jfree.data.xy.YIntervalSeries.add(double, double, double, double)"
"org.jfree.data.ComparableObjectSeriesTest.testEquals()","org.jfree.data.ComparableObjectSeries.equals(java.lang.Object)"
"org.jfree.data.xy.YIntervalSeriesTest.testSetMaximumItemCount2()","org.jfree.data.ComparableObjectSeries.setMaximumItemCount(int)"
"org.jfree.data.xy.YIntervalSeriesTest.testAdd()","org.jfree.data.xy.YIntervalSeries.add(double, double, double, double)"
"org.jfree.data.xy.YIntervalSeriesTest.testSetMaximumItemCount()","org.jfree.data.ComparableObjectSeries.setMaximumItemCount(int)"
"org.jfree.chart.annotations.XYTitleAnnotationTest.testHashCode()","org.jfree.chart.annotations.XYTitleAnnotation.hashCode()"
"org.jfree.chart.entity.TickLabelEntityTest.testEquals()","org.jfree.chart.entity.ChartEntity.equals(java.lang.Object)"
"org.jfree.chart.entity.CategoryLabelEntityTest.testEquals()","org.jfree.chart.entity.CategoryLabelEntity.equals(java.lang.Object)"
"org.jfree.chart.block.FlowArrangementTest.testEquals()","org.jfree.chart.block.FlowArrangement.equals(java.lang.Object)"
"org.jfree.data.RangeTest.testContains()","org.jfree.data.Range.contains(double)"
"org.jfree.data.RangeTest.testConstrain()","org.jfree.data.Range.constrain(double)"
"org.jfree.data.statistics.MeanAndStandardDeviationTest.testEquals()","org.jfree.data.statistics.MeanAndStandardDeviation.equals(java.lang.Object)"
"org.jfree.chart.renderer.GrayPaintScaleTest.testGetPaint()","org.jfree.chart.renderer.GrayPaintScale.getPaint(double)"
"org.jfree.data.ComparableObjectItemTest.testCompareTo()","org.jfree.data.ComparableObjectItem.compareTo(java.lang.Object)"
"org.jfree.chart.annotations.TextAnnotationTest.testSetRotationAnchor()","org.jfree.chart.annotations.TextAnnotation.setRotationAnchor(org.jfree.ui.TextAnchor)"
"org.jfree.data.RangeTest.testIntersects()","org.jfree.data.Range.intersects(double, double)"
"org.jfree.data.RangeTest.testShift()","org.jfree.data.Range.shift(org.jfree.data.Range, double)"
"org.jfree.data.RangeTest.testShift()","org.jfree.data.Range.shift(org.jfree.data.Range, double, boolean)"
"org.jfree.chart.plot.MeterIntervalTest.testEquals()","org.jfree.chart.plot.MeterInterval.equals(java.lang.Object)"
"org.jfree.data.RangeTest.testScale()","org.jfree.data.Range.scale(org.jfree.data.Range, double)"
"org.jfree.data.RangeTest.testHashCode()","org.jfree.data.Range.hashCode()"
"org.jfree.data.RangeTest.testCombine()","org.jfree.data.Range.combine(org.jfree.data.Range, org.jfree.data.Range)"
"org.jfree.data.RangeTest.testEquals()","org.jfree.data.Range.equals(java.lang.Object)"
"org.jfree.chart.labels.StandardXYSeriesLabelGeneratorTest.testEquals()","org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals(java.lang.Object)"
"org.jfree.chart.labels.StandardXYSeriesLabelGeneratorTest.testHashCode()","org.jfree.chart.labels.StandardXYSeriesLabelGenerator.hashCode()"
"org.jfree.chart.labels.StandardCategoryItemLabelGeneratorTest.testHashCode()","org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.hashCode()"
"org.jfree.chart.plot.ColorPaletteTest.testEquals()","org.jfree.chart.plot.ColorPalette.equals(java.lang.Object)"
"org.jfree.data.DefaultKeyedValuesTest.testGetItemCount()","org.jfree.data.DefaultKeyedValues.getItemCount()"
"org.jfree.data.DefaultKeyedValues2DTest.testRemoveValueBug1690654()","org.jfree.data.DefaultKeyedValues2D.removeValue(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.DefaultKeyedValuesTest.testClear()","org.jfree.data.DefaultKeyedValues.clear()"
"org.jfree.data.DefaultKeyedValuesTest.testAddValue()","org.jfree.data.DefaultKeyedValues.addValue(java.lang.Comparable, double)"
"org.jfree.data.DefaultKeyedValuesTest.testAddValue()","org.jfree.data.DefaultKeyedValues.addValue(java.lang.Comparable, java.lang.Number)"
"org.jfree.data.DefaultKeyedValues2DTest.testRemoveValue()","org.jfree.data.DefaultKeyedValues2D.removeValue(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.time.YearTest.testGetSerialIndex()","org.jfree.data.time.Year.getSerialIndex()"
"org.jfree.data.time.MonthTest.testDec9999Previous()","org.jfree.data.time.Month.previous()"
"org.jfree.data.time.MonthTest.testJan1900Previous()","org.jfree.data.time.Month.previous()"
"org.jfree.chart.LegendItemTest.testEquals()","org.jfree.chart.LegendItem.equals(java.lang.Object)"
"org.jfree.chart.annotations.XYTitleAnnotationTest.testEquals()","org.jfree.chart.annotations.XYTitleAnnotation.equals(java.lang.Object)"
"org.jfree.data.time.YearTest.testGetLastMillisecondWithCalendar()","org.jfree.data.time.Year.getLastMillisecond(java.util.Calendar)"
"org.jfree.data.time.TimeSeriesTest.testGetValue()","org.jfree.data.time.TimeSeries.getValue(org.jfree.data.time.RegularTimePeriod)"
"org.jfree.data.time.YearTest.testEquals()","org.jfree.data.time.Year.equals(java.lang.Object)"
"org.jfree.data.time.YearTest.test9999Previous()","org.jfree.data.time.Year.previous()"
"org.jfree.data.time.YearTest.test1900Next()","org.jfree.data.time.Year.next()"
"org.jfree.data.time.YearTest.testGetLastMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getLastMillisecond(java.util.TimeZone)"
"org.jfree.data.time.ohlc.OHLCItemTest.testHashcode()","org.jfree.data.ComparableObjectItem.hashCode()"
"org.jfree.data.time.WeekTest.testNext()","org.jfree.data.time.Week.next()"
"org.jfree.data.time.YearTest.testNext()","org.jfree.data.time.Year.next()"
"org.jfree.data.time.TimeSeriesTest.testGetDataItem2()","org.jfree.data.time.TimeSeries.getDataItem(org.jfree.data.time.RegularTimePeriod)"
"org.jfree.data.time.YearTest.testGetFirstMillisecondWithCalendar()","org.jfree.data.time.Year.getFirstMillisecond(java.util.Calendar)"
"org.jfree.data.time.YearTest.testGetEnd()","org.jfree.data.time.RegularTimePeriod.getEnd()"
"org.jfree.data.time.YearTest.testGetLastMillisecond()","org.jfree.data.time.Year.getLastMillisecond()"
"org.jfree.data.time.YearTest.testMinuss9999Previous()","org.jfree.data.time.Year.previous()"
"org.jfree.data.time.ohlc.OHLCItemTest.testEquals()","org.jfree.data.ComparableObjectItem.equals(java.lang.Object)"
"org.jfree.data.time.YearTest.testGetFirstMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getFirstMillisecond(java.util.TimeZone)"
"org.jfree.data.time.YearTest.testEqualsSelf()","org.jfree.data.time.Year.equals(java.lang.Object)"
"org.jfree.data.time.YearTest.test9999Next()","org.jfree.data.time.Year.next()"
"org.jfree.data.time.YearTest.testHashcode()","org.jfree.data.time.Year.hashCode()"
"org.jfree.data.time.WeekTest.testGetLastMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getLastMillisecond(java.util.TimeZone)"
"org.jfree.data.time.MonthTest.testGetLastMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getLastMillisecond(java.util.TimeZone)"
"org.jfree.chart.plot.dial.DialValueIndicatorTest.testHashCode()","org.jfree.chart.plot.dial.DialValueIndicator.hashCode()"
"org.jfree.chart.labels.ItemLabelPositionTest.testEquals()","org.jfree.chart.labels.ItemLabelPosition.equals(java.lang.Object)"
"org.jfree.data.statistics.StatisticsTest.testCalculateMedian3()","org.jfree.data.statistics.Statistics.calculateMedian(java.util.List)"
"org.jfree.data.statistics.StatisticsTest.testCalculateMedian2()","org.jfree.data.statistics.Statistics.calculateMedian(java.util.List)"
"org.jfree.data.statistics.StatisticsTest.testCalculateMedian1()","org.jfree.data.statistics.Statistics.calculateMedian(java.util.List)"
"org.jfree.data.statistics.StatisticsTest.testCalculateMedian4()","org.jfree.data.statistics.Statistics.calculateMedian(java.util.List)"
"org.jfree.chart.renderer.xy.StandardXYBarPainterTest.testHashcode()","org.jfree.chart.renderer.xy.StandardXYBarPainter.hashCode()"
"org.jfree.chart.renderer.xy.StandardXYBarPainterTest.testEquals()","org.jfree.chart.renderer.xy.StandardXYBarPainter.equals(java.lang.Object)"
"org.jfree.chart.renderer.OutlierTest.testEquals()","org.jfree.chart.renderer.Outlier.equals(java.lang.Object)"
"org.jfree.data.time.SimpleTimePeriodTest.testEqualsSelf()","org.jfree.data.time.SimpleTimePeriod.equals(java.lang.Object)"
"org.jfree.data.time.SimpleTimePeriodTest.testHashcode()","org.jfree.data.time.SimpleTimePeriod.hashCode()"
"org.jfree.data.time.SimpleTimePeriodTest.testEquals()","org.jfree.data.time.SimpleTimePeriod.equals(java.lang.Object)"
"org.jfree.data.time.SimpleTimePeriodTest.testCompareTo()","org.jfree.data.time.SimpleTimePeriod.compareTo(java.lang.Object)"
"org.jfree.chart.labels.HighLowItemLabelGeneratorTest.testEquals()","org.jfree.chart.labels.HighLowItemLabelGenerator.equals(java.lang.Object)"
"org.jfree.chart.labels.HighLowItemLabelGeneratorTest.testHashCode()","org.jfree.chart.labels.HighLowItemLabelGenerator.hashCode()"
"org.jfree.chart.labels.BubbleXYItemLabelGeneratorTest.testEquals()","org.jfree.chart.labels.BubbleXYItemLabelGenerator.equals(java.lang.Object)"
"org.jfree.data.function.NormalDistributionFunction2DTest.testHashCode()","org.jfree.data.function.NormalDistributionFunction2D.hashCode()"
"org.jfree.data.function.NormalDistributionFunction2DTest.testEquals()","org.jfree.data.function.NormalDistributionFunction2D.equals(java.lang.Object)"
"org.jfree.data.ComparableObjectItemTest.testEquals()","org.jfree.data.ComparableObjectItem.equals(java.lang.Object)"
"org.jfree.chart.axis.ExtendedCategoryAxisTest.testHashCode()","org.jfree.chart.axis.CategoryAxis.hashCode()"
"org.jfree.data.xy.OHLCDataItemTest.testEquals()","org.jfree.data.xy.OHLCDataItem.equals(java.lang.Object)"
"org.jfree.data.xy.XYCoordinateTest.testEquals()","org.jfree.data.xy.XYCoordinate.equals(java.lang.Object)"
"org.jfree.data.xy.XYCoordinateTest.testHashcode()","org.jfree.data.xy.XYCoordinate.hashCode()"
"org.jfree.chart.axis.QuarterDateFormatTest.testEquals()","org.jfree.chart.axis.QuarterDateFormat.equals(java.lang.Object)"
"org.jfree.data.DataUtilitiesTest.testCreateNumberArray2D()","org.jfree.data.DataUtilities.createNumberArray2D(double[][])"
"org.jfree.chart.axis.PeriodAxisLabelInfoTest.testEquals()","org.jfree.chart.axis.PeriodAxisLabelInfo.equals(java.lang.Object)"
"org.jfree.data.DataUtilitiesTest.testCalculateColumnTotal2()","org.jfree.data.DataUtilities.calculateColumnTotal(org.jfree.data.Values2D, int, int[])"
"org.jfree.data.DefaultKeyedValues2DTest.testGetValue2()","org.jfree.data.DefaultKeyedValues2D.getValue(int, int)"
"org.jfree.data.DefaultKeyedValues2DTest.testGetValue()","org.jfree.data.DefaultKeyedValues2D.getValue(java.lang.Comparable, java.lang.Comparable)"
"org.jfree.data.DefaultKeyedValues2DTest.testGetColumnKey()","org.jfree.data.DefaultKeyedValues2D.getColumnKey(int)"
"org.jfree.data.DataUtilitiesTest.testCalculateColumnTotal()","org.jfree.data.DataUtilities.calculateColumnTotal(org.jfree.data.Values2D, int)"
"org.jfree.data.DataUtilitiesTest.testCalculateRowTotal()","org.jfree.data.DataUtilities.calculateRowTotal(org.jfree.data.Values2D, int)"
"org.jfree.data.DefaultKeyedValues2DTest.testEquals()","org.jfree.data.DefaultKeyedValues2D.equals(java.lang.Object)"
"org.jfree.chart.plot.PlotRenderingInfoTest.testEquals()","org.jfree.chart.plot.PlotRenderingInfo.equals(java.lang.Object)"
"org.jfree.chart.labels.SymbolicXYItemLabelGeneratorTest.testHashCode()","org.jfree.chart.labels.SymbolicXYItemLabelGenerator.hashCode()"
"org.jfree.chart.labels.SymbolicXYItemLabelGeneratorTest.testEquals()","org.jfree.chart.labels.SymbolicXYItemLabelGenerator.equals(java.lang.Object)"
"org.jfree.chart.plot.PieLabelRecordTest.testEquals()","org.jfree.chart.plot.PieLabelRecord.equals(java.lang.Object)"
"org.jfree.chart.block.LineBorderTest.testEquals()","org.jfree.chart.block.LineBorder.equals(java.lang.Object)"
"org.jfree.chart.plot.dial.StandardDialFrameTest.testHashCode()","org.jfree.chart.plot.dial.StandardDialFrame.hashCode()"
"org.jfree.chart.annotations.XYDrawableAnnotationTest.testHashCode()","org.jfree.chart.annotations.XYDrawableAnnotation.hashCode()"
"org.jfree.chart.labels.StandardXYItemLabelGeneratorTest.testEquals()","org.jfree.chart.labels.StandardXYItemLabelGenerator.equals(java.lang.Object)"
"org.jfree.data.xy.XYDataItemTest.testEquals()","org.jfree.data.xy.XYDataItem.equals(java.lang.Object)"
"org.jfree.data.time.WeekTest.testW1Y1900Next()","org.jfree.data.time.Week.next()"
"org.jfree.data.time.WeekTest.testEquals()","org.jfree.data.time.Week.equals(java.lang.Object)"
"org.jfree.data.time.WeekTest.testHashcode()","org.jfree.data.time.Week.hashCode()"
"org.jfree.data.time.WeekTest.testW52Y9999Previous()","org.jfree.data.time.Week.previous()"
"org.jfree.chart.plot.dial.DialBackgroundTest.testHashCode()","org.jfree.chart.plot.dial.DialBackground.hashCode()"
"org.jfree.chart.annotations.XYDrawableAnnotationTest.testEquals()","org.jfree.chart.annotations.XYDrawableAnnotation.equals(java.lang.Object)"
"org.jfree.data.RangeTypeTest.testHashCode()","org.jfree.data.RangeType.hashCode()"
"org.jfree.data.time.TimeSeriesTest.testRemoveAgedItems3()","org.jfree.data.time.TimeSeries.removeAgedItems(long, boolean)"
"org.jfree.chart.LegendItemCollectionTest.testEquals()","org.jfree.chart.LegendItemCollection.equals(java.lang.Object)"
"org.jfree.chart.axis.SubCategoryAxisTest.testHashCode()","org.jfree.chart.axis.SubCategoryAxis.hashCode()"
"org.jfree.chart.axis.AxisTest.testHashCode()","org.jfree.chart.axis.CategoryAxis.hashCode()"
"org.jfree.chart.annotations.XYLineAnnotationTest.testHashCode()","org.jfree.chart.annotations.XYLineAnnotation.hashCode()"
"org.jfree.chart.axis.CategoryAxisTest.testHashCode()","org.jfree.chart.axis.CategoryAxis.hashCode()"
"org.jfree.chart.annotations.XYBoxAnnotationTest.testEquals()","org.jfree.chart.annotations.XYBoxAnnotation.equals(java.lang.Object)"
"org.jfree.chart.annotations.XYLineAnnotationTest.testEquals()","org.jfree.chart.annotations.XYLineAnnotation.equals(java.lang.Object)"
"org.jfree.chart.urls.CustomPieURLGeneratorTest.testEquals()","org.jfree.chart.urls.CustomPieURLGenerator.equals(java.lang.Object)"
"org.jfree.data.time.MonthTest.testEqualsSelf()","org.jfree.data.time.Month.equals(java.lang.Object)"
"org.jfree.data.function.PowerFunction2DTest.testHashCode()","org.jfree.data.function.PowerFunction2D.hashCode()"
"org.jfree.chart.labels.BoxAndWhiskerToolTipGeneratorTest.testEquals()","org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.equals(java.lang.Object)"
"org.jfree.chart.labels.BoxAndWhiskerToolTipGeneratorTest.testHashCode()","org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.hashCode()"
"org.jfree.chart.axis.StandardTickUnitSourceTest.testEquals()","org.jfree.chart.axis.StandardTickUnitSource.equals(java.lang.Object)"
"org.jfree.data.function.PolynomialFunction2DTest.testGetOrder()","org.jfree.data.function.PolynomialFunction2D.getOrder()"
"org.jfree.chart.labels.MultipleXYSeriesLabelGeneratorTest.testHashCode()","org.jfree.chart.labels.MultipleXYSeriesLabelGenerator.hashCode()"
"org.jfree.chart.labels.MultipleXYSeriesLabelGeneratorTest.testEquals()","org.jfree.chart.labels.MultipleXYSeriesLabelGenerator.equals(java.lang.Object)"
"org.jfree.data.DefaultKeyedValuesTest.testGetKeys()","org.jfree.data.DefaultKeyedValues.getKeys()"
"org.jfree.data.DefaultKeyedValuesTest.testGetKey()","org.jfree.data.DefaultKeyedValues.getKey(int)"
"org.jfree.data.DefaultKeyedValuesTest.testGetIndex()","org.jfree.data.DefaultKeyedValues.getIndex(java.lang.Comparable)"
"org.jfree.data.DefaultKeyedValuesTest.testGetValue()","org.jfree.data.DefaultKeyedValues.getValue(int)"
"org.jfree.data.DefaultKeyedValuesTest.testGetValue()","org.jfree.data.DefaultKeyedValues.getValue(java.lang.Comparable)"
"org.jfree.data.statistics.StatisticsTest.testGetStdDev()","org.jfree.data.statistics.Statistics.getStdDev(java.lang.Number[])"
"org.jfree.data.statistics.StatisticsTest.testCalculateMean_Array()","org.jfree.data.statistics.Statistics.calculateMean(java.lang.Number[])"
"org.jfree.data.statistics.StatisticsTest.testCalculateMean_Array()","org.jfree.data.statistics.Statistics.calculateMean(java.lang.Number[], boolean)"
"org.jfree.chart.annotations.XYImageAnnotationTest.testEquals()","org.jfree.chart.annotations.XYImageAnnotation.equals(java.lang.Object)"
"org.jfree.chart.urls.StandardCategoryURLGeneratorTest.testEquals()","org.jfree.chart.urls.StandardCategoryURLGenerator.equals(java.lang.Object)"
"org.jfree.data.function.PolynomialFunction2DTest.testGetCoefficients()","org.jfree.data.function.PolynomialFunction2D.getCoefficients()"
"org.jfree.data.time.WeekTest.testGetLastMillisecond()","org.jfree.data.time.Week.getLastMillisecond()"
"org.jfree.data.time.WeekTest.testGetEnd()","org.jfree.data.time.RegularTimePeriod.getEnd()"
"org.jfree.data.time.FixedMillisecondTest.testHashcode()","org.jfree.data.time.FixedMillisecond.hashCode()"
"org.jfree.chart.labels.StandardCategoryToolTipGeneratorTest.testHashCode()","org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.hashCode()"
"org.jfree.chart.renderer.GrayPaintScaleTest.testEquals()","org.jfree.chart.renderer.GrayPaintScale.equals(java.lang.Object)"
"org.jfree.chart.panel.CrosshairOverlayTest.testEquals()","org.jfree.chart.panel.CrosshairOverlay.equals(java.lang.Object)"
"org.jfree.data.time.MonthTest.testGetFirstMillisecond()","org.jfree.data.time.Month.getFirstMillisecond()"
"org.jfree.data.time.MonthTest.testJan1900Next()","org.jfree.data.time.Month.next()"
"org.jfree.data.time.MonthTest.testGetLastMillisecondWithCalendar()","org.jfree.data.time.Month.getLastMillisecond(java.util.Calendar)"
"org.jfree.data.time.MonthTest.testGetFirstMillisecondWithCalendar()","org.jfree.data.time.Month.getFirstMillisecond(java.util.Calendar)"
"org.jfree.data.time.MonthTest.testGetLastMillisecond()","org.jfree.data.time.Month.getLastMillisecond()"
"org.jfree.data.time.MonthTest.testEquals()","org.jfree.data.time.Month.equals(java.lang.Object)"
"org.jfree.data.time.MonthTest.testGetSerialIndex()","org.jfree.data.time.Month.getSerialIndex()"
"org.jfree.data.time.MonthTest.testGetFirstMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getFirstMillisecond(java.util.TimeZone)"
"org.jfree.data.time.MonthTest.testHashcode()","org.jfree.data.time.Month.hashCode()"
"org.jfree.data.time.MonthTest.testGetEnd()","org.jfree.data.time.RegularTimePeriod.getEnd()"
"org.jfree.data.time.MonthTest.testGetStart()","org.jfree.data.time.RegularTimePeriod.getStart()"
"org.jfree.data.time.WeekTest.testGetFirstMillisecondWithCalendar()","org.jfree.data.time.Week.getFirstMillisecond(java.util.Calendar)"
"org.jfree.data.time.WeekTest.testGetFirstMillisecondWithTimeZone()","org.jfree.data.time.RegularTimePeriod.getFirstMillisecond(java.util.TimeZone)"
"org.jfree.data.time.WeekTest.testGetLastMillisecondWithCalendar()","org.jfree.data.time.Week.getLastMillisecond(java.util.Calendar)"
"org.jfree.data.time.WeekTest.testGetSerialIndex()","org.jfree.data.time.Week.getSerialIndex()"
"org.jfree.chart.util.RelativeDateFormatTest.testFormat()","org.jfree.chart.util.RelativeDateFormat.format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition)"
"org.jfree.chart.StrokeMapTest.testPut()","org.jfree.chart.StrokeMap.put(java.lang.Comparable, java.awt.Stroke)"
"org.jfree.chart.StrokeMapTest.testEquals()","org.jfree.chart.StrokeMap.equals(java.lang.Object)"
"org.jfree.chart.StrokeMapTest.testGetStroke()","org.jfree.chart.StrokeMap.getStroke(java.lang.Comparable)"
"org.jfree.data.statistics.BoxAndWhiskerCalculatorTest.testCalculateBoxAndWhiskerStatistics()","org.jfree.data.statistics.BoxAndWhiskerCalculator.calculateBoxAndWhiskerStatistics(java.util.List)"
"org.jfree.data.function.PolynomialFunction2DTest.testHashCode()","org.jfree.data.function.PolynomialFunction2D.hashCode()"
"org.jfree.data.statistics.BoxAndWhiskerCalculatorTest.testCalculateQ3()","org.jfree.data.statistics.BoxAndWhiskerCalculator.calculateQ3(java.util.List)"
"org.jfree.chart.labels.StandardCategorySeriesLabelGeneratorTest.testEquals()","org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.equals(java.lang.Object)"
"org.jfree.data.DefaultKeyedValueTest.testEquals()","org.jfree.data.DefaultKeyedValue.equals(java.lang.Object)"
"org.jfree.data.DataUtilitiesTest.testClone()","org.jfree.data.DataUtilities.clone(double[][])"
"org.jfree.data.statistics.StatisticsTest.testCalculateMean_Collection()","org.jfree.data.statistics.Statistics.calculateMean(java.util.Collection)"
"org.jfree.data.statistics.StatisticsTest.testCalculateMean_Collection()","org.jfree.data.statistics.Statistics.calculateMean(java.util.Collection, boolean)"
"org.jfree.data.function.PolynomialFunction2DTest.testEquals()","org.jfree.data.function.PolynomialFunction2D.equals(java.lang.Object)"
"org.jfree.chart.axis.MonthDateFormatTest.testEquals()","org.jfree.chart.axis.MonthDateFormat.equals(java.lang.Object)"
"org.jfree.chart.imagemap.ImageMapUtilitiesTest.testHTMLEscape()","org.jfree.chart.imagemap.ImageMapUtilities.htmlEscape(java.lang.String)"
"org.jfree.data.statistics.BoxAndWhiskerCalculatorTest.testCalculateQ1()","org.jfree.data.statistics.BoxAndWhiskerCalculator.calculateQ1(java.util.List)"
"org.jfree.chart.imagemap.ImageMapUtilitiesTest.testJavascriptEscape()","org.jfree.chart.imagemap.ImageMapUtilities.javascriptEscape(java.lang.String)"
"org.jfree.chart.labels.StandardCategorySeriesLabelGeneratorTest.testHashCode()","org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.hashCode()"
"org.jfree.chart.labels.StandardCategoryToolTipGeneratorTest.testEquals()","org.jfree.chart.labels.StandardCategoryToolTipGenerator.equals(java.lang.Object)"
"org.jfree.chart.renderer.category.GradientBarPainterTest.testHashcode()","org.jfree.chart.renderer.category.GradientBarPainter.hashCode()"
"org.jfree.chart.renderer.category.GradientBarPainterTest.testEquals()","org.jfree.chart.renderer.category.GradientBarPainter.equals(java.lang.Object)"
"org.jfree.chart.plot.PlotOrientationTest.testEquals()","org.jfree.chart.plot.PlotOrientation.equals(java.lang.Object)"
"org.jfree.data.DataUtilitiesTest.testEqual()","org.jfree.data.DataUtilities.equal(double[][], double[][])"
"org.jfree.data.function.LineFunction2DTest.testHashCode()","org.jfree.data.function.LineFunction2D.hashCode()"
"org.jfree.data.time.QuarterTest.testQ1Y1900Previous()","org.jfree.data.time.Quarter.previous()"
"org.jfree.chart.util.LineUtilitiesTest.testClipLine()","org.jfree.chart.util.LineUtilities.clipLine(java.awt.geom.Line2D, java.awt.geom.Rectangle2D)"
"org.jfree.chart.block.ColumnArrangementTest.testEquals()","org.jfree.chart.block.ColumnArrangement.equals(java.lang.Object)"
"org.jfree.data.statistics.SimpleHistogramBinTest.testAccepts()","org.jfree.data.statistics.SimpleHistogramBin.accepts(double)"
"org.jfree.chart.axis.AxisLocationTest.testHashCode()","org.jfree.chart.axis.AxisLocation.hashCode()"
"org.jfree.chart.axis.AxisLocationTest.testEquals()","org.jfree.chart.axis.AxisLocation.equals(java.lang.Object)"
"org.jfree.chart.axis.DateTickMarkPositionTest.testEquals()","org.jfree.chart.axis.DateTickMarkPosition.equals(java.lang.Object)"
"org.jfree.data.xy.XYIntervalTest.testEquals()","org.jfree.data.xy.XYInterval.equals(java.lang.Object)"
"org.jfree.data.KeyedObjectTest.testEquals()","org.jfree.data.KeyedObject.equals(java.lang.Object)"
"org.jfree.chart.axis.CategoryLabelWidthTypeTest.testEquals()","org.jfree.chart.axis.CategoryLabelWidthType.equals(java.lang.Object)"
"org.jfree.data.statistics.BoxAndWhiskerItemTest.testEquals()","org.jfree.data.statistics.BoxAndWhiskerItem.equals(java.lang.Object)"
"org.jfree.data.DefaultKeyedValues2DTest.testRemoveRow()","org.jfree.data.DefaultKeyedValues2D.removeRow(int)"
"org.jfree.data.time.ohlc.OHLCTest.testHashcode()","org.jfree.data.time.ohlc.OHLC.hashCode()"
"org.jfree.data.time.ohlc.OHLCTest.testEquals()","org.jfree.data.time.ohlc.OHLC.equals(java.lang.Object)"
"org.jfree.data.DomainOrderTest.testHashCode()","org.jfree.data.DomainOrder.hashCode()"
"org.jfree.data.statistics.StatisticsTest.testCalculateMedian()","org.jfree.data.statistics.Statistics.calculateMedian(java.util.List, boolean)"
"org.jfree.data.statistics.StatisticsTest.testCalculateMedian6()","org.jfree.data.statistics.Statistics.calculateMedian(java.util.List, int, int)"
"org.jfree.data.statistics.StatisticsTest.testCalculateMedian5()","org.jfree.data.statistics.Statistics.calculateMedian(java.util.List, boolean)"
"org.jfree.chart.axis.MarkerAxisBandTest.testHashCode()","org.jfree.chart.axis.MarkerAxisBand.hashCode()"
"org.jfree.chart.axis.MarkerAxisBandTest.testEquals()","org.jfree.chart.axis.MarkerAxisBand.equals(java.lang.Object)"
"org.jfree.data.time.MonthTest.testDec9999Next()","org.jfree.data.time.Month.next()"
"org.jfree.data.time.QuarterTest.testQ4Y9999Next()","org.jfree.data.time.Quarter.next()"
"org.jfree.data.DomainOrderTest.testEquals()","org.jfree.data.DomainOrder.equals(java.lang.Object)"
"org.jfree.data.time.WeekTest.testW52Y9999Next()","org.jfree.data.time.Week.next()"
"org.jfree.data.statistics.HistogramBinTest.testEquals()","org.jfree.data.statistics.HistogramBin.equals(java.lang.Object)"
"org.jfree.chart.renderer.AreaRendererEndTypeTest.testEquals()","org.jfree.chart.renderer.AreaRendererEndType.equals(java.lang.Object)"
"org.jfree.data.RangeTypeTest.testEquals()","org.jfree.data.RangeType.equals(java.lang.Object)"
"org.jfree.chart.axis.CategoryAnchorTest.testEquals()","org.jfree.chart.axis.CategoryAnchor.equals(java.lang.Object)"
"org.jfree.chart.HashUtilitiesTest.testHashCodeForDoubleArray()","org.jfree.chart.HashUtilities.hashCodeForDoubleArray(double[])"
"org.jfree.data.time.WeekTest.testW1Y1900Previous()","org.jfree.data.time.Week.previous()"
